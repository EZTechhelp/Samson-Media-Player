<ResourceDictionary
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
                    xmlns:wf="clr-namespace:Microsoft.Web.WebView2.WinForms;assembly=Microsoft.Web.WebView2.WinForms"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro"
                    xmlns:wfs="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:dock="clr-namespace:AvalonDock;assembly=AvalonDock"
                    xmlns:dockctrl="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
                    xmlns:docklayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
				    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
				    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
				    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
					xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
				    xmlns:reskeys="clr-namespace:AvalonDock.Themes.VS2013.Themes;assembly=AvalonDock.Themes.VS2013"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
					xmlns:controlzEx="urn:controlzex"
					xmlns:behaviors="clr-namespace:DataGridExtensions.Behaviors;assembly=DataGridExtensions"
                    xmlns:WpfExtensions="clr-namespace:WpfExtensions;assembly=EZT_MediaPlayer"					
					xmlns:AttachedBehavior="clr-namespace:ScrollAnimateBehavior.AttachedBehaviors;assembly=EZT_MediaPlayer"
					xmlns:WPFCircleSlider="clr-namespace:WPFCircleSlider;assembly=EZT_MediaPlayer"
                    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:MahApps.Metro.Controls"
					xmlns:mahConverters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
				    xmlns:mdxam="clr-namespace:MdXaml;assembly=MdXaml"
				    xmlns:mdhtml="clr-namespace:MdXaml.Html;assembly=MdXaml.Html"
					xmlns:eff="clr-namespace:System.Windows.Media.Effects;assembly=PresentationFramework"
				    xmlns:mdplug="clr-namespace:MdXaml.Plugins;assembly=MdXaml.Plugins"
					xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
					xmlns:converters="http://schemas.syncfusion.com/wpf" 
					xmlns:mdsvg="clr-namespace:MdXaml.Svg;assembly=MdXaml.Svg"
					xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase">
	<ResourceDictionary.MergedDictionaries>
		<!-- <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.GridSplitter.xaml"/> -->
		<!-- <ResourceDictionary Source="pack://application:,,,/AvalonDock.Themes.VS2013;component/DarkBrushs.xaml"/> -->
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml"/>
	</ResourceDictionary.MergedDictionaries>
<LinearGradientBrush x:Key="GroupHeaderGradient" PresentationOptions:Freeze="True" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="Black" Offset="1"/>
	<GradientStop Offset="0.0" Color="#C4000000"/>
</LinearGradientBrush>	
<Style TargetType="syncfusion:GridHeaderCellControl">
	<Setter Property="Background" Value="Black"/>
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
</Style>
<Style TargetType="syncfusion:GroupDropArea">
	<Setter Property="Foreground" Value="LightGray"/>
	<Setter Property="Background" Value="{StaticResource GroupHeaderGradient}"/>
</Style>
<Storyboard x:Key="VideoViewstoryboard">
    <DoubleAnimation Storyboard.TargetName="Window" Storyboard.TargetProperty="Top" Duration="0:0:0.5" />
</Storyboard>
<Storyboard x:Key="VideoViewHeightstoryboard">
     <DoubleAnimation Storyboard.TargetName="Window" Storyboard.TargetProperty="Height" Duration="0:0:0.5" />
</Storyboard>
<BeginStoryboard x:Key="Playlists_Column_BeginStoryboard"  >
	<Storyboard>
		<WpfExtensions:GridLengthAnimation  Storyboard.TargetProperty="Width"  Duration="0:0:0.2"/>
	</Storyboard>
</BeginStoryboard>
<BeginStoryboard x:Key="Playlists_Column_ExitStoryboard">
	<Storyboard>
		<WpfExtensions:GridLengthAnimation Storyboard.TargetProperty="Width" To="0*" Duration="0:0:0.2"/>
	</Storyboard>
</BeginStoryboard>
<Style TargetType="{x:Type syncfusion:CaptionSummaryRowControl}">
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="{StaticResource GroupHeaderGradient}"/>
	<Setter Property="FontWeight" Value="SemiBold"/>
	<Setter Property="FontSize" Value="16"/>
</Style>
<AttachedBehavior:NegatingConverter x:Key="NegatingConverter"/>
<Storyboard x:Key="minislide">
	<DoubleAnimation To="0"
	                 Duration="00:00:15"
	                 Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
	                 RepeatBehavior="1x"
	                 FillBehavior="Stop"
	                 AutoReverse="false"/>
</Storyboard>
<Storyboard x:Key="VideoView_Overlay_Storyboard_Reset">
	<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.4" Storyboard.TargetProperty="Opacity" To="1"/>
</Storyboard>
<Storyboard x:Key="VideoView_Overlay_Storyboard_Enter">
	<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.4" Storyboard.TargetProperty="Opacity" To="1"/>
	<DoubleAnimation BeginTime="00:00:10" Duration="00:00:0.4" Storyboard.TargetProperty="Opacity" To="0"/>
</Storyboard>
<Storyboard x:Key="VideoView_Overlay_Storyboard_Leave">
	<DoubleAnimation BeginTime="00:00:5" Duration="00:00:0.4" Storyboard.TargetProperty="Opacity" To="0"/>
</Storyboard>
<Storyboard x:Key="VideoView_Overlay_Storyboard_Leave_Quick">
	<DoubleAnimation BeginTime="00:00:0" Duration="00:00:0.4" Storyboard.TargetProperty="Opacity" To="0"/>
</Storyboard>
<Style x:Key="ResetOverlayGridFade" TargetType="{x:Type Grid}">
	<Setter Property="Cursor" Value="Arrow"/>
	<Setter Property="Opacity" Value="1"/>
	<Style.Triggers>	
		<EventTrigger RoutedEvent="Grid.PreviewMouseMove">
			<BeginStoryboard Name="VideoView_Overlay_Storyboard_Enter2" Storyboard="{StaticResource VideoView_Overlay_Storyboard_Reset}"/>
		</EventTrigger>	
	</Style.Triggers>	
</Style>
<Style x:Key="OverlayGridFade" TargetType="{x:Type Grid}">
	<Setter Property="Cursor" Value="Arrow"/>
	<Setter Property="Opacity" Value="0"/>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver,Mode=OneWay}" Value="True"/>
				<Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible,Mode=OneWay}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<MultiDataTrigger.EnterActions>
				<BeginStoryboard Name="VideoView_Overlay_Storyboard_Enter" Storyboard="{StaticResource VideoView_Overlay_Storyboard_Enter}"/>
			</MultiDataTrigger.EnterActions>
			<MultiDataTrigger.ExitActions>
				<SetStoryboardSpeedRatio BeginStoryboardName="VideoView_Overlay_Storyboard_Enter" SpeedRatio="3"/>
				<SetStoryboardSpeedRatio BeginStoryboardName="VideoView_Overlay_Storyboard_Enter2" SpeedRatio="3"/>
			</MultiDataTrigger.ExitActions>
		</MultiDataTrigger>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver,Mode=OneWay}" Value="False"/>
				<Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible,Mode=OneWay}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<MultiDataTrigger.EnterActions>
				<SetStoryboardSpeedRatio BeginStoryboardName="VideoView_Overlay_Storyboard_Enter" SpeedRatio="3"/>
				<SetStoryboardSpeedRatio BeginStoryboardName="VideoView_Overlay_Storyboard_Enter2" SpeedRatio="3"/>
			</MultiDataTrigger.EnterActions>
		</MultiDataTrigger>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Opacity,Mode=OneWay}" Value="0"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Cursor" Value="None"/>
		</MultiDataTrigger>
		<EventTrigger RoutedEvent="Grid.PreviewMouseMove">
			<BeginStoryboard Name="VideoView_Overlay_Storyboard_Enter2" Storyboard="{StaticResource VideoView_Overlay_Storyboard_Enter}"/>
		</EventTrigger>
	</Style.Triggers>
</Style>
<Style TargetType="syncfusion:ComboBoxAdv" BasedOn="{StaticResource {x:Type syncfusion:ComboBoxAdv}}">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="Visibility" Value="Visible"/>
    <Setter Property="BorderBrush" Value="{StaticResource MahApps.Brushes.Text}" />
	<Setter Property="BorderThickness" Value="1" />
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}" />
	<Setter Property="HorizontalContentAlignment" Value="Left" />
	<Setter Property="MinHeight" Value="26" />
	<Setter Property="Padding" Value="4" />
	<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
	<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
	<Setter Property="Width" Value="Auto" />
	<Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True" />
	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
	<!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
	<Setter Property="SnapsToDevicePixels" Value="True" />				
</Style>
 <Style TargetType="syncfusion:DropDownButtonAdv">
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="Transparent"/>
</Style>
 <Style TargetType="syncfusion:SfMultiColumnDropDownControl">
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="Transparent"/>
</Style>
<Style TargetType="syncfusion:FilterRowControl" >
    <Setter Property="OverridesDefaultStyle" Value="False"/>
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="Black"/>
	<Setter Property="SelectionForegroundBrush" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="RowSelectionBrush" Value="{StaticResource MahApps.Brushes.Accent}"/>
	<Setter Property="GroupRowSelectionBrush" Value="{StaticResource MahApps.Brushes.Accent}"/>
	<Setter Property="RowHoverForeground" Value="{StaticResource MahApps.Brushes.Accent}"/>	
	<Setter Property="HighlightSelectionBorderVisiblity" Value="Hidden"/>
	<Setter Property="RowHighlightBorderThickness" Value="0"/>
    <Setter Property="CurrentFocusRowVisibility" Value="Visible"/>	
	<Setter Property="RowHoverForeground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="RowHoverBackgroundBrush" Value="{StaticResource MahApps.Brushes.Accent}"/>
</Style>
<Style TargetType="syncfusion:GridFilterRowCell" >
    <Setter Property="OverridesDefaultStyle" Value="false"/>
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="#FF252525"/>
	<Setter Property="SelectionForegroundBrush" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="CellSelectionBrush" Value="{StaticResource MahApps.Brushes.Accent}"/>
    <Setter Property="FilterOptionButtonVisibility" Value="Visible"/>	
</Style>
<BooleanToVisibilityConverter x:Key="bool2vis" />
<converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
<DataTemplate x:Key="cellTemplate">
	<TextBlock Text="{Binding Path=Value}" Margin="5,3,0,0" />
</DataTemplate>
<Style x:Key="SfDataGridRowStyle" TargetType="syncfusion:VirtualizingCellsControl">
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="SelectionForegroundBrush" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="RowSelectionBrush" Value="{StaticResource MahApps.Brushes.Accent}"/>
	<Style.Triggers>
		<Trigger Property="IsMouseOver" Value="True">
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
			<Setter Property="BorderThickness" Value="1"/>
		</Trigger>
	</Style.Triggers>	
</Style>
<Style x:Key="EditButtonStyle" TargetType="Button">
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Setter Property="Margin" Value="1"/>
	<Setter Property="HorizontalAlignment" Value="Right"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
	<Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type syncfusion:VirtualizingCellsControl}}, Path=IsMouseOver, Mode=OneWay,Converter={StaticResource boolToVisibilityConverter}}"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="Button">
				<Border Name="MediaEdit_border" BorderBrush="Transparent" Padding="4,2" CornerRadius="3" BorderThickness="1" SnapsToDevicePixels="false" PresentationOptions:Freeze="True" Background="{TemplateBinding Background}">
					<Grid SnapsToDevicePixels="false" Margin="0,0,0,0" Name="MediaEdit_Grid">
						<iconPacks:PackIconMaterial Name="MediaEdit_Icon" Kind="Pencil" Width="12" Height="12"/>
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter TargetName="MediaEdit_border" Property="BorderBrush" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="transparent"/>
						<Setter Property="RenderTransform">
							<Setter.Value>
								<ScaleTransform ScaleX="0.90" ScaleY="0.90"/>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Background" Value="DarkGray"/>
						<Setter Property="Opacity" Value="0.8"/>
						<Setter Property="Foreground" Value="Gray"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<DataTemplate x:Key="EditcellTemplate">
	<Grid>
		<TextBlock Text="{Binding Path=Value}" VerticalAlignment="Center"/>
		<Button Name="EditButtonLibrary" VerticalAlignment="Center" HorizontalAlignment="Right">
			<iconPacks:PackIconMaterial  Kind="Pencil" Width="12" Height="12"/>
		</Button>
	</Grid>
</DataTemplate>
<DataTemplate x:Key="StateCellTemplate">
	<TextBlock Text="{Binding Path=Value}" Margin="5,3,0,0" >
		<TextBlock.Style>
			<Style TargetType="TextBlock">
				<Style.Triggers>
					<Trigger Property="Text" Value="Complete">
						<Setter Property="Foreground" Value="LightGreen"/>
					</Trigger>
				</Style.Triggers>
				<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
			</Style>
		</TextBlock.Style>
	</TextBlock>
</DataTemplate>
<DataTemplate x:Key="ProgressCellTemplate">
    <Grid>
		<mah:MetroProgressBar Value="{Binding Path=Value}" Margin="5,3,0,0" Minimum="0" Maximum="100"/>
		<TextBlock Text="{Binding Path=Value}" Margin="5,3,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
	</Grid>
</DataTemplate>
<!-- <Style TargetType="syncfusion:ProgressRing">
	<Setter Property="Foreground" Value="Red"/>
	<Setter Property="Opacity" Value="1"/>
	<Setter Property="Height" Value="200"/>
	<Setter Property="Width" Value="200"/>
</Style> -->
<syncfusion:BoolToVisiblityConverter x:Key="boolToVisiblityConverter"/>
<syncfusion:ReverseVisibilityConverter x:Key="reverseVisibilityConverter"/>
<syncfusion:ResourceNameConverter x:Key="resourceNameConverter"/>
<syncfusion:AdvancedFiltersButtonVisibiltyConverter x:Key="advancedFilterButtonVisibilityConverter"/>
<syncfusion:FilteredFromCheckVisibilityConverter x:Key="filteredFromCheckVisibilityConverter"/>
<Style x:Key="ButtonFocusVisual">
	<Setter>
		<Setter.Value>
			<ControlTemplate>
				<Rectangle StrokeDashArray="1 2" Stroke="{StaticResource MahApps.Brushes.Accent}" SnapsToDevicePixels="true" StrokeThickness="1"/>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
	<GradientStop Color="#F3F3F3" Offset="0"/>
	<GradientStop Color="#EBEBEB" Offset="0.5"/>
	<GradientStop Color="#DDDDDD" Offset="0.5"/>
	<GradientStop Color="#CDCDCD" Offset="1"/>
</LinearGradientBrush>
<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
<SolidColorBrush x:Key="FilterButtonNormalBorder" Color="#FFACACAC"/>
<SolidColorBrush x:Key="FilterButtonNormalBackground" Color="#FF252525" />
<SolidColorBrush x:Key="ThemeAccentColor" Color="{DynamicResource MahApps.Colors.SystemAccent}" />
<!-- <Style x:Key="AdvancedFilterStyle" TargetType="{x:Type syncfusion:GridFilterControl}" BasedOn="{StaticResource {x:Type syncfusion:GridFilterControl}}">
	<Setter Property="FontSize" Value="14"/>
	<Setter Property="FilterMode" Value="AdvancedFilter"/>
	<Setter Property="FontWeight" Value="Normal"/>
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="#FF252525"/>
	<Setter Property="BorderBrush" Value="#FFB2B2B2"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type syncfusion:GridFilterControl}">
				<Border>
					<Popup x:Name="PART_FilterPopup" AllowsTransparency="true" IsOpen="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_FilterToggleButton}" StaysOpen="false">
						<ContentControl ContentTemplate="{TemplateBinding ContentTemplate}">
							<Border Name="PART_FilterPopUpBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Height="{Binding FilterPopupHeight, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="300" MinHeight="450" Width="{Binding FilterPopupWidth, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<StackPanel Grid.Row="0">
										<syncfusion:SortButton Name="PART_SortAscendingButton" Content="{TemplateBinding AscendingSortString}" FontStretch="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{TemplateBinding SortOptionVisibility}">
											<syncfusion:SortButton.Icon>
												<Grid Height="20" Margin="1" Width="20">
													<Path Data="F1 M 4.84775,5.78774 L 2.07043,5.78774 1.73962,6.55335 C 1.63162,6.80788 1.57816,7.01882 1.57816,7.18482 1.57816,7.40562 1.66666,7.56761 1.84509,7.67255 1.94934,7.73428 2.20578,7.78054 2.616,7.81123 L 2.616,8.02601 0,8.02601 0,7.81123 C 0.282684,7.76882 0.514404,7.65162 0.696686,7.46095 0.877777,7.26948 1.10159,6.87428 1.36856,6.27468 L 4.18106,0 4.29175,0 7.12778,6.44855 C 7.39856,7.05988 7.61987,7.44402 7.79443,7.60281 7.9259,7.72268 8.11081,7.79228 8.35031,7.81123 L 8.35031,8.02601 4.54697,8.02601 4.54697,7.81123 4.70322,7.81123 C 5.00925,7.81123 5.22269,7.76882 5.34644,7.68362 5.4324,7.62242 5.474,7.53321 5.474,7.41734 5.474,7.34762 5.46362,7.27601 5.44016,7.20242 5.4324,7.16787 5.37375,7.02281 5.26575,6.76748 L 4.84775,5.78774 M 4.65109,5.35869 L 3.47922,2.65041 2.27347,5.35869 4.65109,5.35869 Z" Fill="#FF5384B4" HorizontalAlignment="Left" Height="8.026" Margin="0,0.43,0,0" Stretch="Fill" VerticalAlignment="Top" Width="8.35"/>
													<Path Data="F1 M 7.15628,9.88402 L 2.53391,17.3065 4.03137,17.3065 C 4.7384,17.3065 5.23325,17.2623 5.51575,17.1731 5.97534,17.0339 6.37122,16.778 6.70456,16.405 7.03653,16.0319 7.26697,15.5319 7.39456,14.9056 L 7.61987,14.9056 7.30081,17.7473 0.0990906,17.7473 4.72668,10.3131 3.56125,10.3131 C 3.10815,10.3131 2.81125,10.3268 2.668,10.3535 2.39722,10.4043 2.14334,10.5032 1.90506,10.6523 1.668,10.8014 1.47012,10.9994 1.31387,11.2467 1.15762,11.4941 1.03391,11.8072 0.945343,12.1861 L 0.73056,12.1861 0.945343,9.88402 7.15628,9.88402 Z" Fill="#FF8959AB" HorizontalAlignment="Left" Height="7.863" Margin="0.099,0,0,0.276" Stretch="Fill" VerticalAlignment="Bottom" Width="7.521"/>
													<Path Data="F0 M 4.0409864,0 L 5.9969865,0 5.9969865,15.197009 8.8929906,12.301001 10.035989,13.441002 5.0239959,18.452001 5.0169979,18.444992 5.0090033,18.453001 0,13.441188 1.1350007,12.304003 4.0409864,15.209299 Z" Fill="#FF727272" HorizontalAlignment="Right" Stretch="Fill" Width="10.036"/>
												</Grid>
											</syncfusion:SortButton.Icon>
											<syncfusion:SortButton.Style>
												<Style TargetType="{x:Type syncfusion:SortButton}">
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="BorderBrush" Value="Transparent"/>
													<Style.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
														</Trigger>
													</Style.Triggers>
												</Style>
											</syncfusion:SortButton.Style>
										</syncfusion:SortButton>
										<syncfusion:SortButton Name="PART_SortDescendingButton" Content="{TemplateBinding DescendingSortString}" FontStretch="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{TemplateBinding SortOptionVisibility}">
											<syncfusion:SortButton.Icon>
												<Grid Height="20" Margin="1" Width="20">
													<Path Data="F0 M 4.0409985,0 L 5.9969985,0 5.9969985,15.197002 8.893003,12.301001 10.036005,13.441002 5.0239986,18.452001 5.0174005,18.445392 5.0098115,18.453001 0,13.441188 1.1351838,12.304003 4.0409985,15.209239 Z" Fill="#FF727272" HorizontalAlignment="Right" Stretch="Fill" Width="10.036"/>
													<Path Data="F1 M 7.1563,0 L 2.53386,7.42252 4.03134,7.42252 C 4.73828,7.42252 5.23308,7.37825 5.51563,7.28905 5.97534,7.14973 6.37109,6.89385 6.70444,6.52093 7.03654,6.14787 7.26694,5.64787 7.39453,5.02146 L 7.61987,5.02146 7.30083,7.86332 0.0989685,7.86332 4.72653,0.429047 3.5612,0.429047 C 3.10815,0.429047 2.8112,0.44278 2.66801,0.469452 2.39722,0.520264 2.14319,0.619202 1.90495,0.768265 1.66801,0.917336 1.47014,1.11533 1.31389,1.36266 1.15759,1.61012 1.03386,1.92319 0.945358,2.30212 L 0.73056,2.30212 0.945358,0 7.1563,0 Z" Fill="#FF8959AB" HorizontalAlignment="Left" Height="7.863" Margin="0.099,0.593,0,0" Stretch="Fill" VerticalAlignment="Top" Width="7.521"/>
													<Path Data="F1 M 4.84775,15.3464 L 2.0704,15.3464 1.73962,16.112 C 1.63159,16.3665 1.57813,16.5774 1.57813,16.7436 1.57813,16.9642 1.66667,17.1264 1.84509,17.2312 1.94922,17.2931 2.20573,17.3392 2.61589,17.3699 L 2.61589,17.5846 0,17.5846 0,17.3699 C 0.282562,17.3274 0.514404,17.2103 0.696655,17.0196 0.877609,16.8281 1.10161,16.4329 1.36853,15.8333 L 4.18108,9.55865 4.29175,9.55865 7.12761,16.0072 C 7.39856,16.6185 7.61987,17.0027 7.79428,17.1615 7.92587,17.2813 8.11069,17.3509 8.35027,17.3699 L 8.35027,17.5846 4.54697,17.5846 4.54697,17.3699 4.70322,17.3699 C 5.0092,17.3699 5.22266,17.3274 5.34641,17.2423 5.4323,17.1811 5.474,17.0919 5.474,16.976 5.474,16.9063 5.46362,16.8346 5.44016,16.7611 5.4323,16.7267 5.37375,16.5815 5.26563,16.3263 L 4.84775,15.3464 M 4.65109,14.9173 L 3.47922,12.2091 2.27348,14.9173 4.65109,14.9173 Z" Fill="#FF5384B4" HorizontalAlignment="Left" Height="8.026" Margin="0,0,0,0.275" Stretch="Fill" VerticalAlignment="Bottom" Width="8.35"/>
												</Grid>
											</syncfusion:SortButton.Icon>
											<syncfusion:SortButton.Style>
												<Style TargetType="{x:Type syncfusion:SortButton}">
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="BorderBrush" Value="Transparent"/>
													<Style.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
														</Trigger>
													</Style.Triggers>
												</Style>
											</syncfusion:SortButton.Style>
										</syncfusion:SortButton>
										<Button Name="PART_ClearFilterButton" Content="{syncfusion:GridLocalizationResource ResourceName=ClearFilter}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" IsEnabled="true" VerticalAlignment="Stretch">
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
													<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
													<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
													<Setter Property="BorderThickness" Value="1"/>
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="HorizontalContentAlignment" Value="Center"/>
													<Setter Property="VerticalContentAlignment" Value="Center"/>
													<Setter Property="Padding" Value="2"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid Name="PART_ClearButtonPresenter" Background="Transparent">
																	<Border Name="PART_RootBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
																		<Grid>
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="Auto"/>
																				<ColumnDefinition Width="*"/>
																			</Grid.ColumnDefinitions>
																			<Path x:Name="PART_ClearButtonPath" Grid.Column="0" Data="F0 M 0.33299977,11.255001 L 37.041462,11.255001 C 37.024662,11.5465 36.998562,11.833101 36.998562,12.127001 36.998562,16.835509 39.218578,21.028417 42.66,23.739322 L 32.947735,35.025546 32.947735,63.215999 21.340952,56.585582 21.340952,34.473741 M 1.2878267,4.0470002 L 39.629997,4.0470002 C 38.814808,5.2892774 38.189812,6.6619451 37.776917,8.1230001 L 1.2878267,8.1230001 C 0.57567823,8.1229997 2.9802322E-08,7.5472746 0,6.8362782 L 0,5.3361609 C 2.9802322E-08,4.622725 0.57567823,4.0469999 1.2878267,4.0470002 M 49.429409,3.7740004 L 46.442997,6.7597783 50.784157,11.100458 46.442997,15.441261 49.42902,18.426001 53.769852,14.085821 58.110516,18.426001 61.096996,15.440762 56.756023,11.100098 61.096996,6.7597783 58.111217,3.7740004 53.770287,8.1145711 M 53.78915,0 C 59.935287,0 64.920998,5.0389932 64.920998,11.25525 64.920998,17.469967 59.935287,22.509999 53.78915,22.509999 47.643211,22.509999 42.66,17.469967 42.66,11.25525 42.66,5.0389932 47.643211,0 53.78915,0 Z" Fill="Gray" Height="20" Margin="4,5,4,4" Stretch="Uniform" Width="20">
																				<Path.RenderTransform>
																					<TransformGroup>
																						<RotateTransform Angle="0"/>
																						<ScaleTransform ScaleX="1" ScaleY="1"/>
																					</TransformGroup>
																				</Path.RenderTransform>
																			</Path>
																			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Column="1" Margin="{TemplateBinding Padding}" OpacityMask="{x:Null}" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																		</Grid>
																	</Border>
																	<Border BorderBrush="#FFB2B2B2" BorderThickness="0,1,0,0" Margin="30,0,0,0"/>
																</Grid>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter TargetName="PART_RootBorder" Property="Background" Value="{StaticResource MahApps.Brushes.SystemControlHighlightAccent}"/>
																	</Trigger>
																	<Trigger Property="IsPressed" Value="True">
																		<Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
																		<Setter Property="RenderTransform">
																			<Setter.Value>
																				<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
																			</Setter.Value>
																		</Setter>
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Opacity" Value="0.5"/>
																		<Setter Property="Foreground" Value="Gray"/>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
										</Button>
										<TextBlock Name="AdvancedFiltersText" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Margin="30,5,4,2" Text="{Binding FilterColumnType, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding FilterMode, ConverterParameter=reverse, Converter={StaticResource advancedFilterButtonVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
										<Button Name="PART_AdvancedFilterButton" Content="{Binding FilterColumnType, RelativeSource={RelativeSource TemplatedParent}}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" Visibility="{Binding FilterMode, Converter={StaticResource advancedFilterButtonVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
													<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
													<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
													<Setter Property="BorderThickness" Value="1"/>
													<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
													<Setter Property="HorizontalContentAlignment" Value="Center"/>
													<Setter Property="VerticalContentAlignment" Value="Center"/>
													<Setter Property="Padding" Value="1"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid Name="PART_AdvancedFiltersButtonPresenter" Background="Transparent">
																	<Border Name="PART_RootBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
																		<Grid>
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="29"/>
																				<ColumnDefinition Width="*"/>
																				<ColumnDefinition Width="Auto"/>
																			</Grid.ColumnDefinitions>
																			<Border BorderBrush="#FFB2B2B2" BorderThickness="1,1,1,1" Height="19" Visibility="{Binding FilteredFrom, ConverterParameter=reverse, Converter={StaticResource filteredFromCheckVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:GridFilterControl}}}" Width="19"/>
																			<Path x:Name="PART_FilteredFromCheck" Data="F0 M 12.4227,0.00012207 C 12.4867,0.126587 12.5333,0.274536 12.6787,0.321411 9.49199,3.24792 6.704,6.57336 4.69865,10.6827 4.04399,11.08 3.47066,11.5573 2.83199,11.9706 2.09467,10.2198 1.692,8.13196 3.8147E-06,7.33606 0.500004,6.79871 1.31733,6.05994 1.93067,6.2428 2.85999,6.51868 3.14,7.9054 3.60399,8.81604 5.80133,5.5387 8.53734,2.19202 12.4227,0.00012207 Z" Fill="Gray" Height="15" Margin="4,5,4,4" Stretch="Uniform" Visibility="{Binding FilteredFrom, ConverterParameter=reverse, Converter={StaticResource filteredFromCheckVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:GridFilterControl}}}" Width="15">
																				<Path.RenderTransform>
																					<TransformGroup>
																						<RotateTransform Angle="0"/>
																						<ScaleTransform ScaleX="1" ScaleY="1"/>
																					</TransformGroup>
																				</Path.RenderTransform>
																			</Path>
																			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpacityMask="{x:Null}" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																			<Grid Grid.Column="2" Height="20" Margin="4,5,10,2" Width="20">
																				<Path x:Name="PART_ExpanderCellPath" Data="F1 M 335.667,278.908 L 335.667,268.241 343.425,273.574 335.667,278.908 Z" Fill="#FF444444" Height="10.667" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="7.758">
																					<Path.RenderTransform>
																						<TransformGroup>
																							<RotateTransform Angle="0"/>
																						</TransformGroup>
																					</Path.RenderTransform>
																				</Path>
																			</Grid>
																		</Grid>
																	</Border>
																</Grid>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter TargetName="PART_RootBorder" Property="Background" Value="{StaticResource MahApps.Brushes.SystemControlHighlightAccent}"/>
																	</Trigger>
																	<Trigger Property="IsPressed" Value="True">
																		<Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
																		<Setter Property="RenderTransform">
																			<Setter.Value>
																				<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
																			</Setter.Value>
																		</Setter>
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Opacity" Value="0.5"/>
																		<Setter Property="Foreground" Value="Gray"/>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
										</Button>
									</StackPanel>
									<Grid Background="#FF252525" Grid.Row="1">
										<syncfusion:CheckboxFilterControl Name="PART_CheckboxFilterControl" Background="{TemplateBinding Background}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" Focusable="false" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource reverseVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
										<syncfusion:AdvancedFilterControl Name="PART_AdvancedFilterControl" Background="{TemplateBinding Background}" FontStretch="{TemplateBinding FontWeight}" Foreground="Black" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" Focusable="false" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Grid>
									<Border Grid.Row="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Margin="30,0,0,4" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
									<StackPanel Grid.Row="3">
										<StackPanel HorizontalAlignment="Right" Margin="0,10,4,5" Orientation="Horizontal">
											<Button Name="PART_OkButton" Background="{StaticResource FilterButtonNormalBackground}" BorderBrush="{StaticResource FilterButtonNormalBorder}" Content="{syncfusion:GridLocalizationResource ResourceName=OK}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" IsEnabled="false" Margin="5,0,0,0" Visibility="{Binding ImmediateUpdateColumnFilter, ConverterParameter=InverseVisiblity, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Width="100"/>
											<Button Name="PART_CancelButton" Background="{StaticResource FilterButtonNormalBackground}" BorderBrush="{StaticResource FilterButtonNormalBorder}" Content="{Binding ImmediateUpdateColumnFilter, Converter={StaticResource resourceNameConverter}, RelativeSource={RelativeSource TemplatedParent}}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Margin="5,0,0,0" Width="100"/>
										</StackPanel>
										<Border BorderBrush="LightGray" BorderThickness="0.5" Height="10">
											<Border.Background>
												<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
													<GradientStop Color="Transparent" Offset="0"/>
													<GradientStop Color="#E3E3E3" Offset="1"/>
												</LinearGradientBrush>
											</Border.Background>
											<Thumb x:Name="PART_ThumbGripper" Cursor="SizeNWSE" HorizontalAlignment="Right">
												<Thumb.Template>
													<ControlTemplate>
														<Grid Background="Transparent">
															<Path Data="F0 M 36.396,36.017 L 47.901,36.017 47.901,47.521999 36.396,47.521999 M 18.198,36.017 L 29.716,36.017 29.716,47.521999 18.198,47.521999 M 0,36.017 L 11.511999,36.017 11.511999,47.521999 0,47.521999 M 36.396,18.191001 L 47.901,18.191001 47.901,29.696 36.396,29.696 M 18.198,18.191 L 29.716,18.191 29.716,29.696 18.198,29.696 M 36.396,0 L 47.901,0 47.901,11.512 36.396,11.512 Z" Fill="#FF727272" Height="8" Stretch="Fill" Width="8"/>
														</Grid>
													</ControlTemplate>
												</Thumb.Template>
											</Thumb>
										</Border>
									</StackPanel>
								</Grid>
							</Border>
						</ContentControl>
					</Popup>
				</Border>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style> -->
<Style TargetType="{x:Type syncfusion:GridFilterControl}" BasedOn="{StaticResource {x:Type syncfusion:GridFilterControl}}">
	<Setter Property="FontSize" Value="14"/>
	<Setter Property="FilterMode" Value="CheckboxFilter"/>
	<Setter Property="FontWeight" Value="Normal"/>
	<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	<Setter Property="Background" Value="#FF252525"/>
	<Setter Property="BorderBrush" Value="#FFB2B2B2"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type syncfusion:GridFilterControl}">
				<Border>
					<Popup x:Name="PART_FilterPopup" AllowsTransparency="true" IsOpen="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_FilterToggleButton}" StaysOpen="false">
						<ContentControl ContentTemplate="{TemplateBinding ContentTemplate}">
							<Border Name="PART_FilterPopUpBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Height="{Binding FilterPopupHeight, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="300" MinHeight="450" Width="{Binding FilterPopupWidth, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<StackPanel Grid.Row="0">
										<syncfusion:SortButton Name="PART_SortAscendingButton" Content="{TemplateBinding AscendingSortString}" FontStretch="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{TemplateBinding SortOptionVisibility}">
											<syncfusion:SortButton.Icon>
												<Grid Height="20" Margin="1" Width="20">
													<Path Data="F1 M 4.84775,5.78774 L 2.07043,5.78774 1.73962,6.55335 C 1.63162,6.80788 1.57816,7.01882 1.57816,7.18482 1.57816,7.40562 1.66666,7.56761 1.84509,7.67255 1.94934,7.73428 2.20578,7.78054 2.616,7.81123 L 2.616,8.02601 0,8.02601 0,7.81123 C 0.282684,7.76882 0.514404,7.65162 0.696686,7.46095 0.877777,7.26948 1.10159,6.87428 1.36856,6.27468 L 4.18106,0 4.29175,0 7.12778,6.44855 C 7.39856,7.05988 7.61987,7.44402 7.79443,7.60281 7.9259,7.72268 8.11081,7.79228 8.35031,7.81123 L 8.35031,8.02601 4.54697,8.02601 4.54697,7.81123 4.70322,7.81123 C 5.00925,7.81123 5.22269,7.76882 5.34644,7.68362 5.4324,7.62242 5.474,7.53321 5.474,7.41734 5.474,7.34762 5.46362,7.27601 5.44016,7.20242 5.4324,7.16787 5.37375,7.02281 5.26575,6.76748 L 4.84775,5.78774 M 4.65109,5.35869 L 3.47922,2.65041 2.27347,5.35869 4.65109,5.35869 Z" Fill="#FF5384B4" HorizontalAlignment="Left" Height="8.026" Margin="0,0.43,0,0" Stretch="Fill" VerticalAlignment="Top" Width="8.35"/>
													<Path Data="F1 M 7.15628,9.88402 L 2.53391,17.3065 4.03137,17.3065 C 4.7384,17.3065 5.23325,17.2623 5.51575,17.1731 5.97534,17.0339 6.37122,16.778 6.70456,16.405 7.03653,16.0319 7.26697,15.5319 7.39456,14.9056 L 7.61987,14.9056 7.30081,17.7473 0.0990906,17.7473 4.72668,10.3131 3.56125,10.3131 C 3.10815,10.3131 2.81125,10.3268 2.668,10.3535 2.39722,10.4043 2.14334,10.5032 1.90506,10.6523 1.668,10.8014 1.47012,10.9994 1.31387,11.2467 1.15762,11.4941 1.03391,11.8072 0.945343,12.1861 L 0.73056,12.1861 0.945343,9.88402 7.15628,9.88402 Z" Fill="#FF8959AB" HorizontalAlignment="Left" Height="7.863" Margin="0.099,0,0,0.276" Stretch="Fill" VerticalAlignment="Bottom" Width="7.521"/>
													<Path Data="F0 M 4.0409864,0 L 5.9969865,0 5.9969865,15.197009 8.8929906,12.301001 10.035989,13.441002 5.0239959,18.452001 5.0169979,18.444992 5.0090033,18.453001 0,13.441188 1.1350007,12.304003 4.0409864,15.209299 Z" Fill="#FF727272" HorizontalAlignment="Right" Stretch="Fill" Width="10.036"/>
												</Grid>
											</syncfusion:SortButton.Icon>
											<syncfusion:SortButton.Style>
												<Style TargetType="{x:Type syncfusion:SortButton}">
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="BorderBrush" Value="Transparent"/>
													<Style.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
														</Trigger>
													</Style.Triggers>
												</Style>
											</syncfusion:SortButton.Style>
										</syncfusion:SortButton>
										<syncfusion:SortButton Name="PART_SortDescendingButton" Content="{TemplateBinding DescendingSortString}" FontStretch="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{TemplateBinding SortOptionVisibility}">
											<syncfusion:SortButton.Icon>
												<Grid Height="20" Margin="1" Width="20">
													<Path Data="F0 M 4.0409985,0 L 5.9969985,0 5.9969985,15.197002 8.893003,12.301001 10.036005,13.441002 5.0239986,18.452001 5.0174005,18.445392 5.0098115,18.453001 0,13.441188 1.1351838,12.304003 4.0409985,15.209239 Z" Fill="#FF727272" HorizontalAlignment="Right" Stretch="Fill" Width="10.036"/>
													<Path Data="F1 M 7.1563,0 L 2.53386,7.42252 4.03134,7.42252 C 4.73828,7.42252 5.23308,7.37825 5.51563,7.28905 5.97534,7.14973 6.37109,6.89385 6.70444,6.52093 7.03654,6.14787 7.26694,5.64787 7.39453,5.02146 L 7.61987,5.02146 7.30083,7.86332 0.0989685,7.86332 4.72653,0.429047 3.5612,0.429047 C 3.10815,0.429047 2.8112,0.44278 2.66801,0.469452 2.39722,0.520264 2.14319,0.619202 1.90495,0.768265 1.66801,0.917336 1.47014,1.11533 1.31389,1.36266 1.15759,1.61012 1.03386,1.92319 0.945358,2.30212 L 0.73056,2.30212 0.945358,0 7.1563,0 Z" Fill="#FF8959AB" HorizontalAlignment="Left" Height="7.863" Margin="0.099,0.593,0,0" Stretch="Fill" VerticalAlignment="Top" Width="7.521"/>
													<Path Data="F1 M 4.84775,15.3464 L 2.0704,15.3464 1.73962,16.112 C 1.63159,16.3665 1.57813,16.5774 1.57813,16.7436 1.57813,16.9642 1.66667,17.1264 1.84509,17.2312 1.94922,17.2931 2.20573,17.3392 2.61589,17.3699 L 2.61589,17.5846 0,17.5846 0,17.3699 C 0.282562,17.3274 0.514404,17.2103 0.696655,17.0196 0.877609,16.8281 1.10161,16.4329 1.36853,15.8333 L 4.18108,9.55865 4.29175,9.55865 7.12761,16.0072 C 7.39856,16.6185 7.61987,17.0027 7.79428,17.1615 7.92587,17.2813 8.11069,17.3509 8.35027,17.3699 L 8.35027,17.5846 4.54697,17.5846 4.54697,17.3699 4.70322,17.3699 C 5.0092,17.3699 5.22266,17.3274 5.34641,17.2423 5.4323,17.1811 5.474,17.0919 5.474,16.976 5.474,16.9063 5.46362,16.8346 5.44016,16.7611 5.4323,16.7267 5.37375,16.5815 5.26563,16.3263 L 4.84775,15.3464 M 4.65109,14.9173 L 3.47922,12.2091 2.27348,14.9173 4.65109,14.9173 Z" Fill="#FF5384B4" HorizontalAlignment="Left" Height="8.026" Margin="0,0,0,0.275" Stretch="Fill" VerticalAlignment="Bottom" Width="8.35"/>
												</Grid>
											</syncfusion:SortButton.Icon>
											<syncfusion:SortButton.Style>
												<Style TargetType="{x:Type syncfusion:SortButton}">
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="BorderBrush" Value="Transparent"/>
													<Style.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
														</Trigger>
													</Style.Triggers>
												</Style>
											</syncfusion:SortButton.Style>
										</syncfusion:SortButton>
										<Button Name="PART_ClearFilterButton" Content="{syncfusion:GridLocalizationResource ResourceName=ClearFilter}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" IsEnabled="true" VerticalAlignment="Stretch">
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
													<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
													<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
													<Setter Property="BorderThickness" Value="1"/>
													<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
													<Setter Property="HorizontalContentAlignment" Value="Center"/>
													<Setter Property="VerticalContentAlignment" Value="Center"/>
													<Setter Property="Padding" Value="2"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid Name="PART_ClearButtonPresenter" Background="Transparent">
																	<Border Name="PART_RootBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
																		<Grid>
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="Auto"/>
																				<ColumnDefinition Width="*"/>
																			</Grid.ColumnDefinitions>
																			<Path x:Name="PART_ClearButtonPath" Grid.Column="0" Data="F0 M 0.33299977,11.255001 L 37.041462,11.255001 C 37.024662,11.5465 36.998562,11.833101 36.998562,12.127001 36.998562,16.835509 39.218578,21.028417 42.66,23.739322 L 32.947735,35.025546 32.947735,63.215999 21.340952,56.585582 21.340952,34.473741 M 1.2878267,4.0470002 L 39.629997,4.0470002 C 38.814808,5.2892774 38.189812,6.6619451 37.776917,8.1230001 L 1.2878267,8.1230001 C 0.57567823,8.1229997 2.9802322E-08,7.5472746 0,6.8362782 L 0,5.3361609 C 2.9802322E-08,4.622725 0.57567823,4.0469999 1.2878267,4.0470002 M 49.429409,3.7740004 L 46.442997,6.7597783 50.784157,11.100458 46.442997,15.441261 49.42902,18.426001 53.769852,14.085821 58.110516,18.426001 61.096996,15.440762 56.756023,11.100098 61.096996,6.7597783 58.111217,3.7740004 53.770287,8.1145711 M 53.78915,0 C 59.935287,0 64.920998,5.0389932 64.920998,11.25525 64.920998,17.469967 59.935287,22.509999 53.78915,22.509999 47.643211,22.509999 42.66,17.469967 42.66,11.25525 42.66,5.0389932 47.643211,0 53.78915,0 Z" Fill="Gray" Height="20" Margin="4,5,4,4" Stretch="Uniform" Width="20">
																				<Path.RenderTransform>
																					<TransformGroup>
																						<RotateTransform Angle="0"/>
																						<ScaleTransform ScaleX="1" ScaleY="1"/>
																					</TransformGroup>
																				</Path.RenderTransform>
																			</Path>
																			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Column="1" Margin="{TemplateBinding Padding}" OpacityMask="{x:Null}" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																		</Grid>
																	</Border>
																	<Border BorderBrush="#FFB2B2B2" BorderThickness="0,1,0,0" Margin="30,0,0,0"/>
																</Grid>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter TargetName="PART_RootBorder" Property="Background" Value="{StaticResource MahApps.Brushes.SystemControlHighlightAccent}"/>
																	</Trigger>
																	<Trigger Property="IsPressed" Value="True">
																		<Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
																		<Setter Property="RenderTransform">
																			<Setter.Value>
																				<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
																			</Setter.Value>
																		</Setter>
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Opacity" Value="0.5"/>
																		<Setter Property="Foreground" Value="Gray"/>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
										</Button>
										<TextBlock Name="AdvancedFiltersText" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Margin="30,5,4,2" Text="{Binding FilterColumnType, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding FilterMode, ConverterParameter=reverse, Converter={StaticResource advancedFilterButtonVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
										<Button Name="PART_AdvancedFilterButton" Content="{Binding FilterColumnType, RelativeSource={RelativeSource TemplatedParent}}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" Visibility="{Binding FilterMode, Converter={StaticResource advancedFilterButtonVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
													<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
													<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
													<Setter Property="BorderThickness" Value="1"/>
													<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
													<Setter Property="HorizontalContentAlignment" Value="Center"/>
													<Setter Property="VerticalContentAlignment" Value="Center"/>
													<Setter Property="Padding" Value="1"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid Name="PART_AdvancedFiltersButtonPresenter" Background="Transparent">
																	<Border Name="PART_RootBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
																		<Grid>
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="29"/>
																				<ColumnDefinition Width="*"/>
																				<ColumnDefinition Width="Auto"/>
																			</Grid.ColumnDefinitions>
																			<Border BorderBrush="#FFB2B2B2" BorderThickness="1,1,1,1" Height="19" Visibility="{Binding FilteredFrom, ConverterParameter=reverse, Converter={StaticResource filteredFromCheckVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:GridFilterControl}}}" Width="19"/>
																			<Path x:Name="PART_FilteredFromCheck" Data="F0 M 12.4227,0.00012207 C 12.4867,0.126587 12.5333,0.274536 12.6787,0.321411 9.49199,3.24792 6.704,6.57336 4.69865,10.6827 4.04399,11.08 3.47066,11.5573 2.83199,11.9706 2.09467,10.2198 1.692,8.13196 3.8147E-06,7.33606 0.500004,6.79871 1.31733,6.05994 1.93067,6.2428 2.85999,6.51868 3.14,7.9054 3.60399,8.81604 5.80133,5.5387 8.53734,2.19202 12.4227,0.00012207 Z" Fill="Gray" Height="15" Margin="4,5,4,4" Stretch="Uniform" Visibility="{Binding FilteredFrom, ConverterParameter=reverse, Converter={StaticResource filteredFromCheckVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:GridFilterControl}}}" Width="15">
																				<Path.RenderTransform>
																					<TransformGroup>
																						<RotateTransform Angle="0"/>
																						<ScaleTransform ScaleX="1" ScaleY="1"/>
																					</TransformGroup>
																				</Path.RenderTransform>
																			</Path>
																			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpacityMask="{x:Null}" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																			<Grid Grid.Column="2" Height="20" Margin="4,5,10,2" Width="20">
																				<Path x:Name="PART_ExpanderCellPath" Data="F1 M 335.667,278.908 L 335.667,268.241 343.425,273.574 335.667,278.908 Z" Fill="#FF444444" Height="10.667" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="7.758">
																					<Path.RenderTransform>
																						<TransformGroup>
																							<RotateTransform Angle="0"/>
																						</TransformGroup>
																					</Path.RenderTransform>
																				</Path>
																			</Grid>
																		</Grid>
																	</Border>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
										</Button>
									</StackPanel>
									<Grid Background="#FF252525" Grid.Row="1">
										<syncfusion:CheckboxFilterControl Name="PART_CheckboxFilterControl" Background="{TemplateBinding Background}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" Focusable="false" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource reverseVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
										<syncfusion:AdvancedFilterControl Name="PART_AdvancedFilterControl" Background="#FF252525" FontStretch="{TemplateBinding FontWeight}" Foreground="{StaticResource MahApps.Brushes.IdealForeground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" Focusable="false" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Grid>
									<Border Grid.Row="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Margin="30,0,0,4" Visibility="{Binding IsAdvancedFilterVisible, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
									<StackPanel Grid.Row="3">
										<StackPanel HorizontalAlignment="Right" Margin="0,10,4,5" Orientation="Horizontal">
											<Button Name="PART_OkButton" Background="{StaticResource FilterButtonNormalBackground}" BorderBrush="{StaticResource FilterButtonNormalBorder}" Content="{syncfusion:GridLocalizationResource ResourceName=OK}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" IsEnabled="false" Margin="5,0,0,0" Visibility="{Binding ImmediateUpdateColumnFilter, ConverterParameter=InverseVisiblity, Converter={StaticResource boolToVisiblityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Width="100"/>
											<Button Name="PART_CancelButton" Background="{StaticResource FilterButtonNormalBackground}" BorderBrush="{StaticResource FilterButtonNormalBorder}" Content="{Binding ImmediateUpdateColumnFilter, Converter={StaticResource resourceNameConverter}, RelativeSource={RelativeSource TemplatedParent}}" FontStretch="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Margin="5,0,0,0" Width="100"/>
										</StackPanel>
										<Border BorderBrush="LightGray" BorderThickness="0.5" Height="10">
											<Border.Background>
												<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
													<GradientStop Color="Transparent" Offset="0"/>
													<GradientStop Color="#E3E3E3" Offset="1"/>
												</LinearGradientBrush>
											</Border.Background>
											<Thumb x:Name="PART_ThumbGripper" Cursor="SizeNWSE" HorizontalAlignment="Right">
												<Thumb.Template>
													<ControlTemplate>
														<Grid Background="Transparent">
															<Path Data="F0 M 36.396,36.017 L 47.901,36.017 47.901,47.521999 36.396,47.521999 M 18.198,36.017 L 29.716,36.017 29.716,47.521999 18.198,47.521999 M 0,36.017 L 11.511999,36.017 11.511999,47.521999 0,47.521999 M 36.396,18.191001 L 47.901,18.191001 47.901,29.696 36.396,29.696 M 18.198,18.191 L 29.716,18.191 29.716,29.696 18.198,29.696 M 36.396,0 L 47.901,0 47.901,11.512 36.396,11.512 Z" Fill="#FF727272" Height="8" Stretch="Fill" Width="8"/>
														</Grid>
													</ControlTemplate>
												</Thumb.Template>
											</Thumb>
										</Border>
									</StackPanel>
								</Grid>
							</Border>
						</ContentControl>
					</Popup>
				</Border>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>	
 <Style TargetType="syncfusion:FilterToggleButton">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="syncfusion:FilterToggleButton">
                <Grid SnapsToDevicePixels="True">
                    <VisualStateManager.VisualStateGroups>                   
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver" />
                            <VisualState x:Name="Pressed" />
                            <VisualState x:Name="Disabled" />
                        </VisualStateGroup>
                        
                        <VisualStateGroup x:Name="FilterStates">
                        
                            <VisualState x:Name="Filtered">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FilterToggleButtonIndicator" 
                                                                   Storyboard.TargetProperty="Data">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Geometry>M2.1299944,9.9798575L55.945994,9.9798575 35.197562,34.081179 35.197562,
                                                          62.672859 23.428433,55.942383 23.428433,33.52121z M1.3001332,0L56.635813,
                                                          0C57.355887,0,57.935946,0.5891428,57.935946,1.3080959L57.935946,
                                                          2.8258877C57.935946,3.5448422,57.355887,4.133985,56.635813,4.133985L1.3001332,
                                                          4.133985C0.58005941,4.133985,-2.3841858E-07,3.5448422,0,2.8258877L0,
                                                          1.3080959C-2.3841858E-07,0.5891428,0.58005941,0,1.3001332,0z
                                                </Geometry>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimation Duration="0:0:0:1"                                                       
                                                    Storyboard.TargetName="PathFillColor"
                                                    Storyboard.TargetProperty="Color"
                                                    To="Red" />
                                </Storyboard>
                            </VisualState>
                            
                            <VisualState x:Name="UnFiltered">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FilterToggleButtonIndicator" 
                                                                   Storyboard.TargetProperty="Data">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Geometry>F1M-2124.61,-1263.65L-2131.54,-1263.72 -2145.51,-1263.84 -2152.41,
                                                          -1263.9C-2155.99,-1263.93,-2157.48,-1262.16,-2155.7,-1259.96L-2152.05,
                                                          -1255.43C-2150.28,-1253.23,-2147.38,-1249.62,-2145.61,-1247.42L-2143.25,
                                                          -1244.5 -2143.25,-1230.24C-2143.25,-1229.23,-2142.43,-1228.42,-2141.42,
                                                          -1228.42L-2135.64,-1228.42C-2134.63,-1228.42,-2133.81,-1229.23,-2133.81,
                                                          -1230.24L-2133.81,-1244.78 -2131.7,-1247.3C-2129.89,-1249.47,-2126.93,-1253.02,
                                                          -2125.12,-1255.18L-2121.39,-1259.65C-2119.57,-1261.82,-2121.02,-1263.62,-2124.61,-1263.65z
                                                </Geometry>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimation Duration="0:0:0:1"                                                       
                                                    Storyboard.TargetName="PathFillColor"
                                                    Storyboard.TargetProperty="Color"
                                                    To="Gray" />
                                </Storyboard>
                            </VisualState>
                            
                        </VisualStateGroup>
                        
                    </VisualStateManager.VisualStateGroups>
                    
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            
                        <Path Name="PART_FilterToggleButtonIndicator"
                              Margin="3"
                              Data="F1M-2124.61,-1263.65L-2131.54,-1263.72 -2145.51,-1263.84 -2152.41,
                                    -1263.9C-2155.99,-1263.93,-2157.48,-1262.16,-2155.7,
                                    -1259.96L-2152.05,-1255.43C-2150.28,-1253.23,-2147.38,
                                    -1249.62,-2145.61,-1247.42L-2143.25,-1244.5 -2143.25,
                                    -1230.24C-2143.25,-1229.23,-2142.43,-1228.42,-2141.42,
                                    -1228.42L-2135.64,-1228.42C-2134.63,-1228.42,-2133.81,
                                    -1229.23,-2133.81,-1230.24L-2133.81,-1244.78 -2131.7,
                                    -1247.3C-2129.89,-1249.47,-2126.93,-1253.02,-2125.12,
                                    -1255.18L-2121.39,-1259.65C-2119.57,-1261.82,-2121.02,
                                    -1263.62,-2124.61,-1263.65z"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              Stretch="Fill">
                            <Path.Fill>
                                <SolidColorBrush x:Name="PathFillColor" 
                                                 Color="Gray" />
                            </Path.Fill>
                        </Path>
                        
                    </Border>
                </Grid>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>	
<SolidColorBrush x:Key="AccentBase" Color="{DynamicResource MahApps.Colors.AccentBase}" PresentationOptions:Freeze="True" Opacity="0.6"/>
<!--The "Metro" LayoutAnchorableControl Style-->
<Style x:Key="ReadOnlyTextBox" TargetType="TextBox">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="0"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
</Style>
<Style x:Key="TextBoxHyperlink" TargetType="TextBox">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="0"/>
	<Setter Property="TextDecorations" Value="Underline"/>
	<Setter Property="Foreground" Value="#FFF0F0F0"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Style.Triggers>
		<Trigger Property="IsMouseOver" Value="True">
			<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Cursor" Value="Hand"/>
		</Trigger>
	</Style.Triggers>
</Style>
<Style x:Key="AvalonDockThemeVs2013ToolButtonStyle" TargetType="ToggleButton">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="Padding" Value="0"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="ToggleButton">
				<Border
						Background="{TemplateBinding Background}"
				        BorderBrush="{TemplateBinding BorderBrush}"
				        BorderThickness="{TemplateBinding BorderThickness}">
					<ContentPresenter/>
				</Border>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<Style x:Key="AvalonDockThemeVs2013ButtonStyle" TargetType="Button">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="Padding" Value="0"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="Button">
				<Border
						Background="{TemplateBinding Background}"
				        BorderBrush="{TemplateBinding BorderBrush}"
				        BorderThickness="{TemplateBinding BorderThickness}">
					<ContentPresenter/>
				</Border>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<Style x:Key="LayoutAnchorableFloatingWindowControl" TargetType="{x:Type dockctrl:LayoutAnchorableFloatingWindowControl}">
	<Setter Property="UseLayoutRounding" Value="True"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderBrush" Value="Black"/>
	<Setter Property="OwnedByDockingManagerWindow" Value="False"/>
	<Setter Property="controlzEx:WindowChromeBehavior.IgnoreTaskbarOnMaximize" Value="True"/>
	<Setter Property="shell:WindowChrome.WindowChrome">
		<Setter.Value>
			<shell:WindowChrome
							    CaptionHeight="16"
			                    CornerRadius="4"
			                    GlassFrameThickness="0"
			                    ResizeBorderThickness="5"/>
		</Setter.Value>
	</Setter>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type dockctrl:LayoutAnchorableFloatingWindowControl}">
				<Grid Name="WindowGrid">
					<Border
							Name="WindowBorder"
					        Background="Black"
					        Opacity="1"
					        BorderBrush="Transparent"
					        BorderThickness="5">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="0" x:Name="GridRow0"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Border
									Name="Header"
							        Padding="2,2,3,3"
							        Background="Transparent"
							        TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveText}}">
								<Grid UseLayoutRounding="True" Name="HeaderGridRow0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Rectangle
											   x:Name="DragHandleGeometryPlaceholder"
									           Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveGrip}}"
									           Visibility="Collapsed"/>
									<DockPanel>
										<Border Padding="2,0,4,0" HorizontalAlignment="Left" Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
											<dockctrl:DropDownControlArea
																		  DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
											                              DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
											                              Style="{DynamicResource DropDownControlArea}">
												<ContentPresenter
																  Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
												                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
												                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
											</dockctrl:DropDownControlArea>
										</Border>

										<Rectangle
												   x:Name="DragHandleTexture"
										           Height="5"
										           Margin="4,0,4,0"
										           VerticalAlignment="Center"
										           UseLayoutRounding="True"
										           RenderOptions.BitmapScalingMode="NearestNeighbor">
											<Rectangle.Fill>
												<DrawingBrush
															  TileMode="Tile"
												              Viewbox="0,0,4,4"
												              ViewboxUnits="Absolute"
												              Viewport="0,0,4,4"
												              ViewportUnits="Absolute">
													<DrawingBrush.Drawing>
														<GeometryDrawing Brush="{Binding Fill, ElementName=DragHandleGeometryPlaceholder, Mode=OneWay, Converter={avalonDockConverters:NullToDoNothingConverter}}">
															<GeometryDrawing.Geometry>
																<GeometryGroup>
																	<GeometryGroup.Children>
																		<RectangleGeometry Rect="0,0,1,1"/>
																		<RectangleGeometry Rect="2,2,1,1"/>
																	</GeometryGroup.Children>
																</GeometryGroup>
															</GeometryDrawing.Geometry>
														</GeometryDrawing>
													</DrawingBrush.Drawing>
												</DrawingBrush>
											</Rectangle.Fill>
										</Rectangle>
									</DockPanel>

									<dockctrl:DropDownButton
															 Name="SinglePaneContextMenu"
									                         Grid.Column="1"
									                         Margin="1,1,1,0"
									                         Width="15"
									                         Height="15"
									                         HorizontalAlignment="Center"
									                         VerticalAlignment="Center"
									                         shell:WindowChrome.IsHitTestVisibleInChrome="True"
									                         DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
									                         DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
									                         Focusable="False"
									                         Style="{StaticResource AvalonDockThemeVs2013ToolButtonStyle}"
									                         ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
									                         Visibility="Hidden">
										<Path
											  x:Name="PART_ImgPinMenu"
										      Margin="0,0,0,1"
										      Width="8"
										      Height="8"
										      Data="{DynamicResource PinMenu}"
										      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
										      Stretch="Uniform"/>
									</dockctrl:DropDownButton>
															
									<Button
											Name="PART_PinMinimize"
									        Grid.Column="1"
									        Margin="1,1,1,0"
									        Width="15"
									        Height="15"
									        HorizontalAlignment="Center"
									        VerticalAlignment="Center"
									        shell:WindowChrome.IsHitTestVisibleInChrome="True"
									        Command="{x:Static shell:SystemCommands.MinimizeWindowCommand}"
									        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									        Focusable="False"
									        Style="{StaticResource AvalonDockThemeVs2013ButtonStyle}"
									        ToolTip="Minimize"
									        Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}"
									        Visibility="Visible">
										<Path
											  x:Name="PART_ImgPinMinimize"
										      Width="9"
										      Height="9"
										      VerticalAlignment="Center"
										      Data="M20,14H4V10H20"
										      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
										      Stretch="Uniform"/>
									</Button>
															
									<Button
										    Name="PART_PinMaximize"
									        Grid.Column="2"
									        Margin="0,1,1,0"
									        Width="15"
									        Height="15"
									        HorizontalAlignment="Center"
									        VerticalAlignment="Center"
									        shell:WindowChrome.IsHitTestVisibleInChrome="True"
									        Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
									        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									        Focusable="False"
									        Style="{StaticResource AvalonDockThemeVs2013ButtonStyle}"
									        ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
									        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}">
										<Path
											  x:Name="PART_ImgPinMaximize"
										      Width="9"
										      Height="9"
										      VerticalAlignment="Center"
										      Data="{DynamicResource PinMaximize}"
										      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
										      Stretch="Uniform"/>
									</Button>

									<Button
											Name="PART_PinRestore"
									        Grid.Column="2"
									        Margin="0,1,1,0"
									        Width="15"
									        Height="15"
									        HorizontalAlignment="Center"
									        VerticalAlignment="Center"
									        shell:WindowChrome.IsHitTestVisibleInChrome="True"
									        Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
									        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									        Focusable="False"
									        Style="{StaticResource AvalonDockThemeVs2013ButtonStyle}"
									        ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
									        Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
										<Path
											  x:Name="PART_ImgPinRestore"
										      Width="10"
										      Height="10"
										      Margin="1,1,0,0"
										      VerticalAlignment="Center"
										      Data="{DynamicResource PinRestore}"
										      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
										      Stretch="Uniform"/>
									</Button>

									<Button
											Name="PART_PinClose"
									        Grid.Column="3"
									        Margin="0,1,1,0"
									        Width="15"
									        Height="15"
									        HorizontalAlignment="Center"
									        VerticalAlignment="Center"
									        shell:WindowChrome.IsHitTestVisibleInChrome="True"
									        Command="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
									        Focusable="False"
									        Style="{StaticResource AvalonDockThemeVs2013ButtonStyle}"
									        ToolTip="Dock/Close"
									        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
										<Path
											  x:Name="PART_ImgPinClose"
										      Width="10"
										      Height="10"
										      Margin="1,0,0,1"
										      VerticalAlignment="Center"
										      Data="{DynamicResource PinClose}"
										      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}"
										      Stretch="Uniform"/>
									</Button>
								</Grid>
							</Border>
							<ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
						</Grid>
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Uid" Value="VideoView"/>
							<Condition Property="WindowState" Value="Maximized"/>
						</MultiTrigger.Conditions>
						<Setter TargetName="WindowBorder" Property="Padding" Value="3"/>
						<Setter TargetName="WindowBorder" Property="BorderThickness" Value="0"/>
						<Setter Property="shell:WindowChrome.WindowChrome" Value="{x:Null}"/>
						<Setter Property="WindowStyle" Value="None"/>
						<Setter TargetName="GridRow0" Property="Height" Value="0"/>
						<Setter Property="ResizeMode" Value="NoResize"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Uid" Value="WebBrowser"/>
							<Condition Property="WindowState" Value="Maximized"/>
							<Condition Property="ResizeMode" Value="NoResize"/>
						</MultiTrigger.Conditions>
						<Setter TargetName="WindowBorder" Property="Padding" Value="3"/>
						<Setter TargetName="WindowBorder" Property="BorderThickness" Value="0"/>
						<Setter Property="shell:WindowChrome.WindowChrome" Value="{x:Null}"/>
						<Setter Property="WindowStyle" Value="None"/>
						<Setter TargetName="GridRow0" Property="Height" Value="0"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Uid" Value="MediaLibrary"/>
						</MultiTrigger.Conditions>
						<Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
					</MultiTrigger>
					<Trigger Property="WindowState" Value="Normal">
						<Setter TargetName="WindowBorder" Property="Padding" Value="3"/>
						<Setter TargetName="WindowBorder" Property="Opacity" Value="1"/>
						<Setter TargetName="WindowBorder" Property="BorderThickness" Value="0"/>
						<Setter Property="BorderBrush" Value="Black"/>
						<Setter TargetName="GridRow0" Property="Height" Value="Auto"/>
						<Setter Property="shell:WindowChrome.WindowChrome">
							<Setter.Value>
								<shell:WindowChrome
													CaptionHeight="16"
								                    CornerRadius="4"
								                    GlassFrameThickness="0"
								                    ResizeBorderThickness="5"/>
							</Setter.Value>
						</Setter>
						<Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
					</Trigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
						<Setter TargetName="Header" Property="Background" Value="Transparent"/>
						<Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveText}}"/>
						<Setter TargetName="DragHandleGeometryPlaceholder" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveGrip}}"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
						<Setter TargetName="PART_PinClose" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
						<Setter TargetName="PART_PinClose" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}"/>
					</DataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMinimize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMinimize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinMinimize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinMinimize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMinimize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMinimize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}"/>
						<Setter TargetName="PART_PinMinimize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinMinimize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}"/>
						<Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}"/>
						<Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}"/>
						<Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}"/>
					</MultiDataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true">
						<Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}"/>
						<Setter TargetName="PART_ImgPinMinimize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}"/>
						<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}"/>
						<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}"/>
						<Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}"/>
					</DataTrigger>

					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMinimize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMinimize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinMinimize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinMinimize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}"/>
						<Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}"/>
						<Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}"/>
					</MultiDataTrigger>

					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMinimize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMinimize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}"/>
						<Setter TargetName="PART_PinMinimize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinMinimize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}"/>
						<Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}"/>
						<Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}"/>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true"/>
							<Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}"/>
						<Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}"/>
						<Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}"/>
					</MultiDataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<Style x:Key="PlayGridButtonStyle" TargetType="ToggleButton">
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Setter Property="Margin" Value="1"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="ToggleButton">
				<Border Name="border" BorderBrush="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="4,0,4,0" CornerRadius="3" BorderThickness="1" SnapsToDevicePixels="false" PresentationOptions:Freeze="True" Background="{TemplateBinding Background}">
					<Grid Height="22" SnapsToDevicePixels="false" Margin="0,0,0,0" >
						<iconPacks:PackIconMaterial Name="PlayMediaButtonIcon" Kind="PlayCircleOutline" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" BorderThickness="0" RenderTransformOrigin="0.5,0.5">
							<iconPacks:PackIconMaterial.RenderTransform>
								<RotateTransform x:Name="PlayGrid_Transform"/>
							</iconPacks:PackIconMaterial.RenderTransform>
						</iconPacks:PackIconMaterial>
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="transparent"/>
						<Setter Property="RenderTransform">
							<Setter.Value>
								<ScaleTransform ScaleX="0.90" ScaleY="0.90"/>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Background" Value="DarkGray"/>
						<Setter Property="Opacity" Value="0.8"/>
						<Setter Property="Foreground" Value="Gray"/>
					</Trigger>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MahApps.Brushes.SystemControlHighlightAccent}"/>
					</Trigger>					
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding Path=State}" Value="Complete"/>
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Uid}" Value="Tor"/>
						</MultiDataTrigger.Conditions>
						<Setter Property="IsEnabled" Value="True"/>
					</MultiDataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
<ScaleTransform x:Key="FontStretchCondensedScale" ScaleX="0.8" />
<ScaleTransform x:Key="FontStretchExpandedScale" ScaleX="1.1" />
<Style x:Key="DisplayPanelEQBorderStyle" TargetType="Border">
  <Style.Setters>
    <Setter Property="Opacity" Value="0.9" />
	<Setter Property="BorderBrush" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=Enable_EQ_Toggle, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style> 
<Style x:Key="DisplayPanelAutoPlayBorderStyle" TargetType="Border">
  <Style.Setters>
    <Setter Property="Opacity" Value="0.9" />
	<Setter Property="BorderBrush" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=AutoPlayButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelAutoPlayTextStyle" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=AutoPlayButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelAutoRepeatBorderStyle" TargetType="Border">
  <Style.Setters>
    <Setter Property="Opacity" Value="0.9" />
	<Setter Property="BorderBrush" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=AutoRepeatButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelAutoRepeatTextStyle" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=AutoRepeatButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelQualityBorderStyle" TargetType="Border">
  <Style.Setters>   
	<Setter Property="Opacity" Value="1"/>
	<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>	
	<Setter Property="Visibility" Value="Visible"/>
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=DisplayPanel_VideoQuality_TextBlock, Path=Text}" Value="{x:Static sys:String.Empty}"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Opacity" Value="0.9" />
			<Setter Property="Visibility" Value="Hidden"/>
			<Setter Property="BorderBrush" Value="#FF252525" />
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelQualityTextStyle" TargetType="TextBlock">
  <Style.Setters>
	 <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
	 <Setter Property="Opacity" Value="1"/>
	 <Setter Property="Visibility" Value="Visible"/>
  </Style.Setters>
	<Style.Triggers>
		<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
			<Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
			<Setter Property="Foreground" Value="#FF252525" />
			<Setter Property="Visibility" Value="Hidden"/>
		</Trigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelShuffleBorderStyle" TargetType="Border">
  <Style.Setters>
    <Setter Property="Opacity" Value="0.9" />
	<Setter Property="BorderBrush" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=ShuffleButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelShuffleTextStyle" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=ShuffleButton_ToggleButton, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelEQTextStyle" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=Enable_EQ_Toggle, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style> 
<Style x:Key="DisplayPanelEQ2PBorderStyle" TargetType="Border">
  <Style.Setters>
    <Setter Property="Opacity" Value="0.9" />
	<Setter Property="BorderBrush" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=Enable_EQ2Pass_Toggle, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style>
<Style x:Key="DisplayPanelEQ2PTextStyle" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
	<Style.Triggers>
		<MultiDataTrigger>
			<MultiDataTrigger.Conditions>
				<Condition Binding="{Binding ElementName=Enable_EQ2Pass_Toggle, Path=IsChecked}" Value="True"/>
			</MultiDataTrigger.Conditions>
			<Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
			<Setter Property="Opacity" Value="1"/>
		</MultiDataTrigger>
	</Style.Triggers>
</Style> 
<Style x:Key="FontStretchExpanded" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchExpandedScale}" />
	<Setter Property="Foreground" Value="#FF252525" />
  </Style.Setters>
</Style> 
<Style x:Key="FontStretchCondensed" TargetType="TextBlock">
  <Style.Setters>
    <Setter Property="LayoutTransform" Value="{StaticResource FontStretchCondensedScale}" />
  </Style.Setters>
</Style> 
<WPFCircleSlider:ValueAngleConverter x:Key="valueAngleConverter"/>
<WPFCircleSlider:ValueTextConverter x:Key="valueTextConverter"/>	
<Style x:Key="WindowChromeStyle" TargetType="mah:MetroWindow">	
      <Setter Property="WindowChrome.WindowChrome">
          <Setter.Value>
			<WindowChrome
			  CornerRadius="12"
			  GlassFrameThickness="0"
			  CaptionHeight="2"	/>		   
          </Setter.Value>
     </Setter> 
 <Style.Triggers> 
 <Trigger Property="WindowState" Value="Maximized">
     <Setter Property="WindowChrome.WindowChrome">
          <Setter.Value>
			<WindowChrome
			  CornerRadius="12"
			  GlassFrameThickness="0"
			  CaptionHeight="2"
			   />		   
          </Setter.Value>
     </Setter>
</Trigger>	
 <Trigger Property="WindowState" Value="Normal">
     <Setter Property="WindowChrome.WindowChrome">
          <Setter.Value>
			<WindowChrome
			  CornerRadius="12"
			  GlassFrameThickness="0"
			  CaptionHeight="2"/>		   
          </Setter.Value>
     </Setter>
</Trigger>
</Style.Triggers>
</Style>
<system:Double x:Key="ActualRaising">25.5</system:Double>
<system:Double x:Key="ActualDropping">25.5</system:Double>
<system:Double x:Key="ShadowDropping">0.0511</system:Double>
<system:Double x:Key="ShadowRaising">25.5</system:Double>
<system:Double x:Key="ShadowOpacity">0.4</system:Double>
<system:Boolean x:Key="PitchColor">True</system:Boolean>
<SolidColorBrush x:Key="ForegroundPitched" Color="DodgerBlue" PresentationOptions:Freeze="True"/>
<SolidColorBrush x:Key="Foreground" Color="DimGray" PresentationOptions:Freeze="True"/>	
<DropShadowEffect x:Key="AudioViewerDropShadow" PresentationOptions:Freeze="True" BlurRadius="20" ShadowDepth="16" Opacity="1" />	
<DropShadowEffect x:Key="SplashProgressDropShadow" PresentationOptions:Freeze="True" BlurRadius="4" ShadowDepth="14" Opacity="0.5" Direction="260"/>		
<Storyboard x:Key="PlayIconStoryBoard">
	<DoubleAnimation Storyboard.TargetName="PlayIcon_Transform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0.0" To="360" Duration="0:0:0.3" RepeatBehavior="Forever" AutoReverse="false"/>
</Storyboard>
<Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">	
        <Grid>
			<Image Grid.Row="1" Source="{Binding Path=Uid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" RenderOptions.BitmapScalingMode="NearestNeighbor" PresentationOptions:Freeze="True" Stretch="None" Panel.ZIndex="2" />
        <Rectangle x:Name="SliderRectangleBackground"
                   PresentationOptions:Freeze="True"
                   RenderOptions.BitmapScalingMode="NearestNeighbor"
				   Height="7"
				   Panel.ZIndex="0"
				   Fill="{DynamicResource MahApps.Brushes.AccentBase}"
                   ScrollViewer.CanContentScroll="True"
                   RenderOptions.CachingHint="Cache"
                   SnapsToDevicePixels="false"
                    />			
		</Grid>																	          								                 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style x:Key="TraySliderRepeatButtonIncrease" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">	
					 <Border Name="BackgroundSliderBar" BorderThickness="0" BorderBrush="Transparent" Background="#FF858585" Margin="0,1,0,0" Height="3"/>	
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">                         
							<Setter TargetName="BackgroundSliderBar" Property="Background" Value="#FF858585"></Setter>
                        </Trigger>
						<DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard >
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundSliderBar" Storyboard.TargetProperty="Height" To="6" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
							<BeginStoryboard >
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="BackgroundSliderBar" Storyboard.TargetProperty="Height" To="3" Duration="0:0:0.1" />
								</Storyboard>
							</BeginStoryboard>
							</DataTrigger.ExitActions>				
						</DataTrigger>						
                    </ControlTemplate.Triggers>						 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
<Style x:Key="SliderRepeatButtonIncrease" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">	
				<StackPanel Margin="0,0,0,0">			
				<Grid Height="11" Background="Transparent">							
			     </Grid>						
				</StackPanel>									          								                 
                </ControlTemplate>			
            </Setter.Value>
        </Setter>
    </Style>
<Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="{Binding Path=Tag}" BorderThickness="1" BorderBrush="{Binding Path=Tag}" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style x:Key="VideoView_SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
					<Border Name="ForgroundSliderBar" SnapsToDevicePixels="false" Background="{StaticResource MahApps.Brushes.Accent}" BorderThickness="0" BorderBrush="Transparent" Height="3"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">                         
							<Setter TargetName="ForgroundSliderBar" Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"></Setter>
                        </Trigger>
	
						<DataTrigger Binding="{Binding Path=IsMouseOver, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard >
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ForgroundSliderBar" Storyboard.TargetProperty="Height" To="6" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
							<BeginStoryboard >
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="ForgroundSliderBar" Storyboard.TargetProperty="Height" To="3" Duration="0:0:0.1" />
								</Storyboard>
							</BeginStoryboard>
							</DataTrigger.ExitActions>				
						</DataTrigger>						
                    </ControlTemplate.Triggers>						
                </ControlTemplate>	
            </Setter.Value>
        </Setter>
    </Style>		
<Style x:Key="SliderThumb1" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="false" />
		<Setter Property="Background" Value="Black" />
         <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb" >
                    <Ellipse x:Name="Ellipse" Height="12" Panel.ZIndex="3" Width="12" StrokeThickness="1" Stroke="Transparent" Fill="Transparent" Margin="0,0,0,0"></Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource MahApps.Brushes.AccentBase}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>	
    </Style>		
<Style x:Key="VideoView_SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                     <Ellipse x:Name="Ellipse" Height="0" Width="0" Fill="{StaticResource MahApps.Brushes.Accent}"></Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
                        </Trigger>
						<DataTrigger Binding="{Binding Path=IsMouseOver, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard >
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Height" To="13" Duration="0:0:0.1" />
										<DoubleAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Width" To="13" Duration="0:0:0.1" />																				
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
							<BeginStoryboard >
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.1" />
									<DoubleAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Width" To="0"  Duration="0:0:0.1" />
								</Storyboard>
							</BeginStoryboard>
							</DataTrigger.ExitActions>				
						</DataTrigger>							
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="1" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>		
    </Style>		
<ControlTemplate x:Key="Slider1" TargetType="Slider">
        <Grid Margin="6,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>					
            <Image Grid.Row="1" x:Name="Slider1_ImageControl" RenderOptions.BitmapScalingMode="NearestNeighbor" PresentationOptions:Freeze="True" Stretch="None" Panel.ZIndex="0" />			
            <Track Grid.Row="1" x:Name="PART_Track" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}"  Command="Slider.DecreaseLarge" Panel.ZIndex="0"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButtonIncrease}" Command="Slider.IncreaseLarge" Panel.ZIndex="0"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb1}" Panel.ZIndex="20"/>
                </Track.Thumb>				
            </Track>				
        </Grid>            
    </ControlTemplate>
<Style x:Key="MiniProgress_SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                     <Ellipse x:Name="Ellipse" Height="10" Width="10" StrokeThickness="1" Stroke="Transparent" Fill="Transparent" Margin="0,0,0,0"></Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="#FF45C5E5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>	
    </Style>	
<Style x:Key="MiniVolume_SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid >
					<Image Source="{Binding Path=Uid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" PresentationOptions:Freeze="True" Height="16" Width="30" Margin="0,2,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>	
    </Style>
<Style x:Key="MiniProgress_Track1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
					<Image Source="{Binding Path=Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" RenderOptions.BitmapScalingMode="NearestNeighbor" PresentationOptions:Freeze="True" Stretch="None" Height="12" Margin="0,2,0,0" >
					</Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
<Style x:Key="MiniVolume_Track1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
					<Image Source="{Binding Path=Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" RenderOptions.BitmapScalingMode="NearestNeighbor" PresentationOptions:Freeze="True" Stretch="None" Height="16" Margin="0,2,0,0" >
					</Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style x:Key="EQ_SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Name="ThumbGrid" Background="Black">
						  <Rectangle x:Name="ThumbFillColor" Fill="{Binding Path=Tag, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Flyout}}}" Margin="5">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="6" ShadowDepth="8" Opacity="1" Direction="270" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>					
					<Image Source="{Binding Path=Uid, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" PresentationOptions:Freeze="True"  Height="32" Width="36" Margin="0,0,0,0"  />
                    </Grid>				
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ThumbFillColor" Property="Fill" Value="{StaticResource MahApps.Brushes.IdealForeground}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>					
                </ControlTemplate>
            </Setter.Value>
        </Setter>	
    </Style>	
<Style x:Key="EQ_Track1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">					
					 <Border BorderThickness="0" BorderBrush="Transparent" Background="Transparent" Margin="0,1,0,0" Height="3"/>					          								                 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
<Style x:Key="MiniVolume_Track2" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">					
					 <Border BorderThickness="0" BorderBrush="Transparent" Background="Transparent" Margin="0,1,0,0" Height="3"/>					          								                 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
<Style x:Key="EQ_Track2" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">					
					 <Border BorderThickness="0" BorderBrush="Transparent" Background="Transparent" Margin="0,1,0,0" Height="3" />					          								                 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
    <ControlTemplate x:Key="MiniProgress_Slider_Template"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource MiniProgress_Track1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource MiniProgress_SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource MiniVolume_Track2}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>            
    </ControlTemplate>
    <ControlTemplate x:Key="EQ_Slider_Template"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource EQ_Track1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource EQ_SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource EQ_Track2}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>            
    </ControlTemplate>	
    <ControlTemplate x:Key="MiniVolume_Slider_Template"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource MiniVolume_Track1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource MiniVolume_SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource MiniVolume_Track2}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>            
    </ControlTemplate>
    <Style x:Key="MiniProgress_Horizontal_Slider" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
				<Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource MiniProgress_Slider_Template}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="EQ_Vertical_Slider" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="false" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinHeight" Value="172" />				
				<Setter Property="MinWidth" Value="12" />
                <Setter Property="Template" Value="{StaticResource EQ_Slider_Template}" />
            </Trigger>
        </Style.Triggers>
    </Style>	
    <Style x:Key="MiniVolume_Horizontal_Slider" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
				<Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource MiniVolume_Slider_Template}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="VideoView_Slider"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" >			
				</RowDefinition>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>		
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource VideoView_SliderRepeatButton}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource VideoView_SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource TraySliderRepeatButtonIncrease}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>            
    </ControlTemplate>	
    <Style x:Key="Horizontal_Slider1" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="false" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource Slider1}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Vertical_Slider" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
		<Setter Property="Opacity" Value="0" />
		<Style.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseEnter">
			<BeginStoryboard Name="VerticalSlider_Storyboard">
				<Storyboard>
					<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetProperty="Opacity" To="1"/>
				</Storyboard>
			</BeginStoryboard>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave">
			<BeginStoryboard Name="VerticalSlider_StoryboardLeave">
				<Storyboard>
					<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetProperty="Opacity" To="0"/>
				</Storyboard>
			</BeginStoryboard>
		</EventTrigger>			
		</Style.Triggers>
    </Style>
    <Style x:Key="VideoView_Horizontal_Slider" BasedOn="{StaticResource {x:Type Slider}}" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
				<Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource VideoView_Slider}" />
            </Trigger>
            <Trigger Property="Name" Value="VideoView_Progress_Slider">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource VideoView_Slider}" />
            </Trigger>			
            <Trigger Property="IsEnabled" Value="false">
			    <Setter Property="MinHeight" Value="0" />
                <Setter Property="Height" Value="0" />
            </Trigger>		
        </Style.Triggers>
    </Style>		
	<Style x:Key="RecordIconStyle" TargetType="{x:Type iconPacks:PackIconFontAwesome}">
	   <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type iconPacks:PackIconFontAwesome}">
					<Grid Name="grid">
						<Border Name="border" CornerRadius="0" BorderBrush="Transparent" BorderThickness="1" Background="Transparent">
							<ContentPresenter></ContentPresenter>
						</Border>
					</Grid>
						<ControlTemplate.Triggers>
									<EventTrigger RoutedEvent="Loaded">
										<BeginStoryboard>
											<Storyboard>
												<ColorAnimation  Storyboard.TargetName="border" AutoReverse="True"  
																 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
																 To="Blue" RepeatBehavior="{Binding Path=Header.PlayIconRecordRepeat,Mode=OneWay}" Duration="0:0:1"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
						</ControlTemplate.Triggers> 
				</ControlTemplate>
			</Setter.Value>
		</Setter>	
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
			             Value="True">
				<DataTrigger.EnterActions>
					<BeginStoryboard Name="PlayIcon_Storyboard">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)" From="0.0" To="360" Duration="0:0:0.3" RepeatBehavior="Forever" AutoReverse="false"/>
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<StopStoryboard BeginStoryboardName="PlayIcon_Storyboard" />
				</DataTrigger.ExitActions>				
			</DataTrigger>
		</Style.Triggers>
	</Style>	
	<Style x:Key="AnimationImageStyle" TargetType="{x:Type iconPacks:PackIconFontAwesome}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
			             Value="True">
				<DataTrigger.EnterActions>
					<BeginStoryboard Name="PlayIcon_Storyboard">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)" From="0.0" To="360" Duration="0:0:0.3" RepeatBehavior="Forever" AutoReverse="false"/>
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<StopStoryboard BeginStoryboardName="PlayIcon_Storyboard" />
				</DataTrigger.ExitActions>				
			</DataTrigger>
		</Style.Triggers>
	</Style>  
    <Thickness x:Key="ComboBoxBorderThemeThickness">1</Thickness>
    <CornerRadius x:Key="ComboBoxPopupBorderThemeCornerRadius">0</CornerRadius>
    <Thickness x:Key="ComboBoxPopupBorderThemeThickness">1</Thickness>
    <Thickness x:Key="ComboBoxPopupBorderThemePadding">1</Thickness>
	<Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}"/>
	<Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource MahApps.Brushes.Text}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />	
		<Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>	
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>	
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Name="RootGrid">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ToggleButton Name="PART_DropDownToggle"
                                          Grid.RowSpan="2"
                                          Grid.ColumnSpan="3"
                                          Margin="0"
                                          VerticalAlignment="Stretch"
                                          mah:ControlsHelper.CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                          mah:TextBoxHelper.ButtonCommand="{TemplateBinding mah:TextBoxHelper.ButtonCommand}"
                                          mah:TextBoxHelper.ButtonCommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}"                                      
                                          mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                          mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                          mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                          mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                          mah:TextBoxHelper.ButtonTemplate="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}"
                                          mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                          mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          KeyboardNavigation.IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Style="{DynamicResource MahApps.Styles.ToggleButton.ComboBoxDropDown}" />

                            <Grid Name="ContentSite"
                                  Grid.Row="1"
                                  Grid.Column="0"
                                  Margin="1 0">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>

                            <TextBox Name="PART_EditableTextBox"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Margin="0"
                                     Padding="{TemplateBinding Padding}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     mah:ControlsHelper.DisabledVisualElementVisibility="Collapsed"
                                     mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                     mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                     mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                     mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                     mah:TextBoxHelper.ButtonTemplate="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}"
                                     mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                     mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}"
                                     mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}"
                                     mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                     mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                     mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                     Background="{x:Null}"
                                     BorderThickness="0"
                                     CharacterCasing="{TemplateBinding mah:ComboBoxHelper.CharacterCasing}"
                                     Focusable="True"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     MaxLength="{TemplateBinding mah:ComboBoxHelper.MaxLength}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     Style="{StaticResource MahApps.Styles.TextBox.ComboBox.Editable}"
                                     Visibility="Collapsed" />

                            <TextBlock Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="4 0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                       Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                       Visibility="Collapsed" />

                            <ContentControl Name="PART_FloatingMessageContainer"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="4 0"
                                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mahConverters:MathMultiplyConverter}" FallbackValue="0">
                                        <Binding ElementName="PART_FloatingMessage"
                                                 Mode="OneWay"
                                                 Path="ActualHeight" />
                                        <Binding ElementName="PART_FloatingMessageContainer"
                                                 Mode="OneWay"
                                                 Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock Name="PART_FloatingMessage"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mahConverters:MathSubtractConverter}" FallbackValue="0">
                                                    <Binding ElementName="PART_FloatingMessage"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                    <Binding ElementName="PART_FloatingMessageContainer"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>
                        </Grid>

                        <Border Name="DisabledVisualElement"
                                Grid.ColumnSpan="3"
                                Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />

                        <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <mah:ClipBorder x:Name="PopupBorder"
                                                Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                                BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}"
                                                BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}"
                                                CornerRadius="{DynamicResource ComboBoxPopupBorderThemeCornerRadius}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">        
                                    <ScrollViewer Padding="{DynamicResource ComboBoxPopupBorderThemePadding}" BorderThickness="0" ScrollViewer.CanContentScroll="false">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </mah:ClipBorder>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextMenu, Converter={x:Static mahConverters:IsNullConverter.Instance}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditableTextBox" Property="ContextMenu" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverters:IsNullConverter.Instance}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverters:IsNullConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverters:IsNullConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}, Converter={x:Static mahConverters:StringIsNullOrEmptyConverter.Default}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
                                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_EditableTextBox" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiTrigger>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MahApps.Brushes.Gray9}" />
                        </Trigger>

                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>		
	</Style>
	<Style x:Key="VideoViewCodiconsStyle" TargetType="iconPacks:PackIconCodicons">
		<Setter Property="Foreground" Value="#ECD9DBDC"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="1.5" Direction="275" BlurRadius="1" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>		
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>	
	<Style x:Key="VideoViewIconStyle" TargetType="iconPacks:PackIconMaterial">
	  <Style.Setters>
		<Setter Property="Foreground" Value="#ECD9DBDC"/>
		<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Effect">
				<Setter.Value>
					<DropShadowEffect ShadowDepth="1.5" Direction="275" BlurRadius="1" PresentationOptions:Freeze="True"/>
				</Setter.Value>
			</Setter>	
	  </Style.Setters>
		<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Foreground" Value="White"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Opacity" Value="0.5"/>
				</Trigger>	
		</Style.Triggers>
	</Style> 	
	<LinearGradientBrush x:Key="TransparentBackgroundStyle" PresentationOptions:Freeze="True" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="Transparent" Offset="0"/>
		<GradientStop Color="Transparent" Offset="0.3"/>
	</LinearGradientBrush>
	<!-- <SolidColorBrush x:Key="IconStyle" Color="{StaticResource MahApps.Colors.SystemAccent}" PresentationOptions:Freeze="True"/> -->
	<!-- <SolidColorBrush x:Key="EQ_SliderThumb_Color" Color="{StaticResource MahApps.Colors.SystemAccent}" PresentationOptions:Freeze="True"/> -->
<!-- 	<Style x:Key="PlaylistItemButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="0,0"
					        BorderBrush="Transparent"
					        CornerRadius="2"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style> -->	
	<Style x:Key="VideoViewButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Margin" Value="5,0,0,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="4,2"
					        BorderBrush="Transparent"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VideoViewToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Margin" Value="5,0,0,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="4,2"
					        BorderBrush="Transparent"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TreeViewButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        BorderBrush="Transparent"
							Padding="4,2"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
						</Trigger>	
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="BrowserToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Margin" Value="5,3,0,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Name="border"
					        BorderThickness="1"
					        BorderBrush="Transparent"
							Padding="6,4,4,6"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="DarkGray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
<!-- 	<Style x:Key="TrayToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="1" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="4,2"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{Binding Path=Tag}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{Binding Path=Tag}"/>
							<Setter Property="Effect" Value="{x:Null}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style> -->	
<!-- 	<Style x:Key="SamsonButtonIconStyle" TargetType="iconPacks:PackIconModern">
		<Setter Property="Foreground" Value="#FF5D6162"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>
			</Trigger>
		</Style.Triggers>
	</Style> -->	
	<Style x:Key="SamsonEQButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Black"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="7" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>							
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="PauseButtonIcon" HorizontalAlignment="Left" Kind="TuneVerticalVariant" Width="13" Height="13" Panel.ZIndex="3" Margin="5,0,0,0" Foreground="#FF484848">	
                         </iconPacks:PackIconMaterial>	
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="PauseButtonIconBackground" HorizontalAlignment="Left" Kind="TuneVerticalVariant" Width="13" Height="13" Margin="5,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}">	
                         </iconPacks:PackIconMaterial>						 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="PauseButton_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PauseButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PauseButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="PauseButton_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PauseButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PauseButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PauseButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>					
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="PauseButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="PauseButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>									
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Background" Value="#FF535455"/>									
						</Trigger>
						<Trigger Property="Name" Value="Enable_EQ2Pass_Toggle">
							<Setter TargetName="PauseButtonIcon" Property="Kind" Value="CircleSmall"/>
							<Setter TargetName="PauseButtonIconBackground" Property="Kind" Value="CircleSmall"/>
						</Trigger>						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True"/>
								<Condition Property="Name" Value="Enable_EQWeb_Toggle"/>
							</MultiTrigger.Conditions>
							<Setter Property="ToolTip" Value="Enables the 10-Band Equalizer for Webplayers. Takes effect immediately"/>
						</MultiTrigger>							
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="False"/>
								<Condition Property="Name" Value="Enable_EQWeb_Toggle"/>
							</MultiTrigger.Conditions>							
							<Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
							<Setter Property="ToolTip" Value="You must first enable 'Enable EQ Support for Web Players' under Settings - Media Player Options in order to enable the Web EQ"/>
						</MultiTrigger>									
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>		
	<Style x:Key="SamsonPowerButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect BlurRadius="4" ShadowDepth="10" Opacity="0.60" Direction="275" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<iconPacks:PackIconModern VerticalAlignment="Center" Name="PowerButtonIcon" HorizontalAlignment="Center" Kind="Power" Width="20" Height="20" Panel.ZIndex="3" Foreground="#FF484848">	
                         </iconPacks:PackIconModern>	
						<iconPacks:PackIconModern VerticalAlignment="Center" Opacity="0"  Name="PowerButtonIconBackground" HorizontalAlignment="Center" Kind="Power" Width="20" Height="20" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}">	
                         </iconPacks:PackIconModern>						 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="PowerButton_Storyboard">
								<Storyboard>
									<!-- <ColorAnimation AutoReverse="False" Storyboard.TargetName="PowerButtonIcon" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="Transparent" RepeatBehavior="1x" Duration="0:0:1"/> -->
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PowerButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PowerButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="PowerButton_StoryboardLeave">
								<Storyboard>
									<!-- <ColorAnimation AutoReverse="False" Storyboard.TargetName="PowerButtonIcon" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="Transparent" RepeatBehavior="1x" Duration="0:0:1"/> -->
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PowerButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="PowerButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PowerButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>					
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="PowerButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="PowerButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="Effect" >
								<Setter.Value>
									<DropShadowEffect BlurRadius="4" ShadowDepth="7" Opacity="0.60" Direction="275" PresentationOptions:Freeze="True" />
								</Setter.Value>
							</Setter>							
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
    <Style x:Key="SamsonLargeToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="7" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>							
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon" HorizontalAlignment="Left" Width="12" Height="12" Panel.ZIndex="3" Margin="10,0,0,0" Foreground="#FF484848"/>	
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground" HorizontalAlignment="Left" Width="12" Height="12" Margin="10,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>	
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon2" HorizontalAlignment="Left" Width="12" Height="12" Panel.ZIndex="3" Margin="26,0,0,0" Foreground="#FF484848"/>	
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground2" HorizontalAlignment="Left" Width="12" Height="12" Margin="26,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>							
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="PlayButton_ToggleButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Play"/>	
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Play"/>
                            <Setter TargetName="ButtonIcon2" Property="Kind" Value="Pause"/>	
							<Setter TargetName="ButtonIconBackground2" Property="Kind" Value="Pause"/>							
                        </MultiTrigger>								
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.EnterActions>
								<BeginStoryboard Name="Button_Storyboard">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>
							<MultiDataTrigger.ExitActions>
								<BeginStoryboard Name="Button_StoryboardLeave">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
									</Storyboard>
								</BeginStoryboard>	
							</MultiDataTrigger.ExitActions>							
						</MultiDataTrigger>	
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="PlayButton_ToggleButton" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.EnterActions>
								<BeginStoryboard >
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon2" Storyboard.TargetProperty="Opacity" To="0" />
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground2" Storyboard.TargetProperty="Opacity" To="1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>
							<MultiDataTrigger.ExitActions>
								<BeginStoryboard >
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon2" Storyboard.TargetProperty="Opacity" To="1" />
										<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground2" Storyboard.TargetProperty="Opacity" To="0" />
									</Storyboard>
								</BeginStoryboard>	
							</MultiDataTrigger.ExitActions>							
						</MultiDataTrigger>						
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>					
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>	
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="PlayButton_ToggleButton" />
								<Condition Property="Uid" Value="IsPaused" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon2" Property="Foreground" Value="Yellow"/>	
                            <Setter Property="IsChecked" Value="false"/>							
                        </MultiTrigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
 <Style x:Key="SamsonMuteButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="8" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="MuteButtonIcon" HorizontalAlignment="Left" Kind="VolumeMute" Width="13" Height="13" Panel.ZIndex="3" Margin="6,0,0,0" Foreground="#FF484848">	
							 </iconPacks:PackIconMaterial>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="MuteButtonIconBackground" HorizontalAlignment="Left" Kind="VolumeMute" Width="13" Height="13" Margin="6,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}">	
							 </iconPacks:PackIconMaterial>						  
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="MuteButton_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MuteButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MuteButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="MuteButton_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MuteButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MuteButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>
						<Trigger Property="Name" Value="MonitorButton_ToggleButton">
							<Setter TargetName="MuteButtonIcon" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="MuteButtonIconBackground" Property="Visibility" Value="Collapsed"/>							
						</Trigger>		
						<Trigger Property="Name" Value="MiniPlayerButton_ToggleButton">
							<Setter TargetName="MuteButtonIcon" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="MuteButtonIconBackground" Property="Visibility" Value="Collapsed"/>							
						</Trigger>						
						<Trigger Property="IsMouseOver" Value="True">	
                           <Setter TargetName="MuteButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>
						   <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>						   
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="MuteButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>	
                            <Setter TargetName="MuteButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>							
							<Setter TargetName="Rectangle" Property="Effect" >
								<Setter.Value>
									<DropShadowEffect BlurRadius="4" ShadowDepth="5" Opacity="1" Direction="275" PresentationOptions:Freeze="True" />
								</Setter.Value>
							</Setter>							
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
   <Style x:Key="SamsonSetupMediumButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="7" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>							
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon" HorizontalAlignment="Left" Width="11" Panel.ZIndex="3" Margin="10,0,0,0" Foreground="#FF484848"/>
						<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground" HorizontalAlignment="Left" Width="11"  Margin="10,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>						 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="RecordButton_ToggleButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Record"/>	
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Record"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="PauseButton_ToggleButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Pause"/>	
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Pause"/>
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="RestartButton_ToggleButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Replay"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Replay"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="15"/>
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="ShowMainButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="AudioVideo"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="AudioVideo"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="15"/>
                        </MultiTrigger>							
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>					
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>	
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="Name" Value="RecordButton_ToggleButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Foreground" Value="Red"/>	
                        </MultiTrigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style> 
	<Style x:Key="SamsonMiniPlayToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="MiniPlayButtonIcon" HorizontalAlignment="Left" Kind="Play" Width="8"  Panel.ZIndex="3" Margin="8,0,0,0" Foreground="#FF484848">	
							 </iconPacks:PackIconMaterial>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="MiniPlayButtonIconBackground" HorizontalAlignment="Left" Kind="Play" Width="8"  Margin="8,0,0,0" Panel.ZIndex="2" Foreground="WhiteSmoke">	
							 </iconPacks:PackIconMaterial>		
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="MiniPlayButtonPauseIcon" HorizontalAlignment="Right" Kind="Pause" Width="8"  Panel.ZIndex="3" Margin="0,0,8,0" Foreground="#FF484848">	
							 </iconPacks:PackIconMaterial>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="MiniPlayButtonPauseIconBackground" HorizontalAlignment="Right" Kind="Pause" Width="8"  Margin="0,0,8,0" Panel.ZIndex="2" Foreground="WhiteSmoke">	
							 </iconPacks:PackIconMaterial>								 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniPlayButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniPlayButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniPlayButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniPlayButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="MiniPlayButtonIconBackground" Property="Foreground" Value="WhiteSmoke"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="MiniPlayButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>							
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="MiniPlayButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
								</Setter.Value>
							</Setter>	
                        </MultiTrigger>						
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniPlayButton_ToggleButton" />
								<Condition Property="Uid" Value="IsPaused" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MiniPlayButtonPauseIcon" Property="Foreground" Value="Yellow"/>	
                            <Setter Property="IsChecked" Value="false"/>
                        </MultiTrigger>	
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
  <Style x:Key="SamsonButtonStyle" TargetType="Button" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">							
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="8" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon" HorizontalAlignment="Left" Kind="ContentSave" Width="13" Height="13" Panel.ZIndex="3" Margin="10,0,0,0" Foreground="#FF484848"/>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground" HorizontalAlignment="Left" Kind="ContentSave" Width="13" Height="13" Margin="10,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIconRight" Visibility="Collapsed" HorizontalAlignment="Right" Kind="Pause" Width="8"  Panel.ZIndex="3" Margin="0,0,8,0" Foreground="#FF484848"/>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconRightBackground" Visibility="Collapsed" HorizontalAlignment="Right" Kind="Pause" Width="8"  Margin="0,0,8,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>									
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>
						<Trigger Property="Name" Value="OpenButton_Button">	
                           <Setter TargetName="ButtonIcon" Property="Kind" Value="Eject"/>	
						   <Setter TargetName="ButtonIconBackground" Property="Kind" Value="Eject"/>
						   <Setter TargetName="ButtonIcon" Property="Width" Value="11"/>
						   <Setter TargetName="ButtonIcon" Property="Height" Value="11"/>
						   <Setter TargetName="ButtonIconBackground" Property="Height" Value="11"/>	
						   <Setter TargetName="ButtonIconBackground" Property="Width" Value="11"/>							   
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="StopButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Stop"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="11"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="11"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="12,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Stop"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="11"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="12,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="11"/>
                        </MultiTrigger>							
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="RestartButton" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Replay"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="10,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Replay"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="10,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="15"/>
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="BackButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="SkipPrevious"/>	
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="SkipPrevious"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="NextButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="SkipNext"/>	
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="SkipNext"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="ShowMainButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="AudioVideo"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="AudioVideo"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="15"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="15"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>							
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniCloseButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Close"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Close"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniOpenButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Eject"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Eject"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>		
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniNextButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="SkipNext"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="SkipNext"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>		
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniBackButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="SkipPrevious"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="SkipPrevious"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="10"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="10"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>	
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniStopButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Stop"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Stop"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="8"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>		
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Name" Value="MiniStopButton_Button" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonIcon" Property="Kind" Value="Stop"/>	
							<Setter TargetName="ButtonIcon" Property="Width" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="Height" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Kind" Value="Stop"/>
							<Setter TargetName="ButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
							<Setter TargetName="ButtonIconBackground" Property="Width" Value="8"/>
							<Setter TargetName="ButtonIconBackground" Property="Height" Value="8"/>
							<Setter TargetName="ButtonIcon" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="ButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
                        </MultiTrigger>							
						<Trigger Property="Tag" Value="VolumeMute">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="VolumeMute"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="VolumeMute"/>							
						</Trigger>						
						<Trigger Property="Tag" Value="ContentSave">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="ContentSave"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="ContentSave"/>							
						</Trigger>
						<Trigger Property="Tag" Value="ImageSearch">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="ImageSearch"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="ImageSearch"/>							
						</Trigger>
						<Trigger Property="Tag" Value="CloseBox">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="CloseBox"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="CloseBox"/>							
						</Trigger>
						<Trigger Property="Tag" Value="ChevronLeft">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="ChevronLeft"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="ChevronLeft"/>							
						</Trigger>
						<Trigger Property="Tag" Value="ChevronRight">	
						   <Setter TargetName="ButtonIcon" Property="Kind" Value="ChevronRight"/>
                           <Setter TargetName="ButtonIconBackground" Property="Kind" Value="ChevronRight"/>							
						</Trigger>						
						<Trigger Property="IsMouseOver" Value="True">	
                           <Setter TargetName="ButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>							
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>	
						</Trigger>						
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.5"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SamsonMiniTextStyle" TargetType="TextBlock" >		
	 <Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="Loaded">
				<BeginStoryboard x:Name="MiniTextBlockLoading_Storyboard">
					<Storyboard>
						<ColorAnimation AutoReverse="True" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="Transparent" RepeatBehavior="1x" Duration="0:0:0.5"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="Unloaded">
				<StopStoryboard BeginStoryboardName="MiniTextBlockLoading_Storyboard"/>
			</EventTrigger>	
		</Style.Triggers>	
	</Style>
	<Style x:Key="SamsonMiniMuteToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="MiniMuteButtonIcon" HorizontalAlignment="Center" Kind="VolumeMute" Width="12" Panel.ZIndex="3" Margin="0,0,0,0" Foreground="#FF484848"/>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="MiniMuteButtonIconBackground" HorizontalAlignment="Center" Kind="VolumeMute" Width="12" Margin="0,0,0,0" Panel.ZIndex="2" Foreground="WhiteSmoke"/>					  
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniMuteButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniMuteButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniMuteButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="MiniMuteButtonIconBackground" Storyboard.TargetProperty="Opacity"  To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>
						<Trigger Property="Name" Value="MiniAutoPlay_ToggleButton">	
						   <Setter TargetName="MiniMuteButtonIcon" Property="Kind" Value="MotionPlayOutline"/>
                           <Setter TargetName="MiniMuteButtonIconBackground" Property="Kind" Value="MotionPlayOutline"/>	
						   <Setter TargetName="MiniMuteButtonIcon" Property="Width" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="Height" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="Margin" Value="0,0,0,0"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="Width" Value="13"/>
					       <Setter TargetName="MiniMuteButtonIconBackground" Property="Height" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="HorizontalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="VerticalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
						   <Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							   
						</Trigger>	
						<Trigger Property="Name" Value="MiniShuffle_ToggleButton">	
						   <Setter TargetName="MiniMuteButtonIcon" Property="Kind" Value="ShuffleVariant"/>
                           <Setter TargetName="MiniMuteButtonIconBackground" Property="Kind" Value="ShuffleVariant"/>	
						   <Setter TargetName="MiniMuteButtonIcon" Property="Width" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="Height" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="Margin" Value="0,0,0,0"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="Margin" Value="0,0,0,0"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="Width" Value="13"/>
					       <Setter TargetName="MiniMuteButtonIconBackground" Property="Height" Value="13"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="HorizontalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIcon" Property="VerticalAlignment" Value="Center"/>
						   <Setter TargetName="MiniMuteButtonIconBackground" Property="HorizontalAlignment" Value="Center"/>
						   <Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							   
						</Trigger>						
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="MiniMuteButtonIconBackground" Property="Foreground" Value="WhiteSmoke"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="MiniMuteButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="MiniMuteButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
								</Setter.Value>
							</Setter>							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="SamsonMiniToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="3" Opacity="0.50" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon" HorizontalAlignment="Center" Kind="ContentDuplicate" Width="12"  Panel.ZIndex="3" Margin="0,0,0,0" Foreground="#FF484848">	
							 </iconPacks:PackIconMaterial>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground" HorizontalAlignment="Center" Kind="ContentDuplicate" Width="12"  Margin="0,0,0,0" Panel.ZIndex="2" Foreground="WhiteSmoke">	
							 </iconPacks:PackIconMaterial>						  
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonIconBackground" Property="Foreground" Value="WhiteSmoke"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
								</Setter.Value>
							</Setter>							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SamsonSpeakerButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="8" Opacity="0.80" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>					  
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>				
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.94" ScaleY="0.94"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" >
								<Setter.Value>
									<ScaleTransform ScaleX="0.93" ScaleY="0.93"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="SamsonToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">
							 <Rectangle.Effect>
								  <DropShadowEffect BlurRadius="4" ShadowDepth="6" Opacity="0.60" Direction="275" PresentationOptions:Freeze="True"/>
							 </Rectangle.Effect>
						  </Rectangle>
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Name="ButtonIcon" HorizontalAlignment="Left" Kind="MinusThick" Width="15"  Panel.ZIndex="3" Margin="6,0,0,0" Foreground="#FF484848">	
							 </iconPacks:PackIconMaterial>	
							<iconPacks:PackIconMaterial VerticalAlignment="Center" Opacity="0" Name="ButtonIconBackground" HorizontalAlignment="Left" Kind="MinusThick" Width="15"  Margin="6,0,0,0" Panel.ZIndex="2" Foreground="{StaticResource MahApps.Brushes.Button.Border.MouseOver}">	
							 </iconPacks:PackIconMaterial>						  
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Name="Button_Storyboard">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="0" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="1" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard Name="Button_StoryboardLeave">
								<Storyboard>
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Opacity" To="1" />
									<DoubleAnimation BeginTime="00:00:00" Duration="00:00:0.2" Storyboard.TargetName="ButtonIconBackground" Storyboard.TargetProperty="Opacity" To="0" />
								</Storyboard>
							</BeginStoryboard>													
						</EventTrigger>					
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonIconBackground" Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter TargetName="ButtonIcon" Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
							<Setter Property="RenderTransform" >
								<Setter.Value>
									<ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" TargetName="Rectangle" Value="{x:Null}"/>
<!-- 							<Setter Property="Effect" TargetName="Rectangle">
								<Setter.Value>
									<DropShadowEffect BlurRadius="0" ShadowDepth="0" Opacity="0.60" Direction="275" PresentationOptions:Freeze="True" />
								</Setter.Value>
							</Setter> -->							
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="ToggleButtonStyle" TargetType="ToggleButton" >
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="1" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="4,2"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<!-- <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/> -->
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
							<Setter Property="Effect" Value="{x:Null}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HellButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="0"/>	
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="0,0"
					        BorderBrush="Transparent"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="FilterButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="2" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="2,0,2,2"
					        BorderBrush="Transparent"
					        CornerRadius="3"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="Height" Value="20"/>
		<Setter Property="MaxWidth" Value="50"/>
		<Setter Property="Foreground" Value="#FFF5F5F5"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="2,2"
					        BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
					        CornerRadius="1"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="White"/>
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightAccent}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="DetailButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Foreground" Value="#FFF5F5F5"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="4,2"
					        BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
					        CornerRadius="1"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Name" Value="WebExtensions_Button">
							<Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
							<Setter TargetName="border" Property="BorderThickness" Value="0"/>						
						</Trigger>						
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="White"/>
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightAccent}"/>
						</Trigger>						
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>				
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MenuButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="0"
					        Padding="2,0,2,0"
					        BorderBrush="Transparent"
					        CornerRadius="1"
							Opacity="0.8"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Opacity" Value="0.8"/>
							<Setter Property="Foreground" Value="Transparent"/>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolsButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="2" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="1"
					        Padding="5,2"
					        BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
					        CornerRadius="1"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="White"/>
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightAccent}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Foreground" Value="Gray"/>
							<Setter Property="Effect" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
 	<Style x:Key="TrayDropDownMenuStyle" BasedOn="{StaticResource MahApps.Styles.ContextMenu}" TargetType="{x:Type ContextMenu}">
	    <Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="HasDropShadow" Value="False"/>
		<Setter Property="Background" Value="#FF252525"/>
		<!-- <Setter Property="Margin" Value="0,0,0,0"/> -->
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border Name="Border" Background="#FF252525" CornerRadius="2.5, 3, 2.5, 3" BorderBrush="{StaticResource MahApps.Brushes.Accent}" BorderThickness="1" Opacity="1" >	
						<VirtualizingStackPanel IsVirtualizing="True" ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
					</Border>
<!-- 					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="#FF252525" />
						</Trigger>					
					</ControlTemplate.Triggers>		 -->
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>	
	<Style x:Key="TrayDropDownMenuitemStyle"  TargetType="MenuItem">
		<Setter Property="OverridesDefaultStyle" Value="False"/> 
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="#FF252525"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>		
		<Setter Property="Margin" Value="5,3,5,3"></Setter>
		<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
		<Setter Property="Template">
			<Setter.Value>				
 			  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
								 TargetType="{x:Type MenuItem}">
					<Border Name="Border" Background="#FF252525" BorderThickness="0" HorizontalAlignment="Stretch" >
						<Grid >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="Icon" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="Shortcut" />
								<ColumnDefinition Width="16" />
							</Grid.ColumnDefinitions>
							<ContentPresenter Name="Icon"
											  Margin="3,0,6,0"
											  VerticalAlignment="Center"
											  ContentSource="Icon" />
							<Border Name="Check"
									Width="16"
									Height="16"
									Visibility="Collapsed"
									Margin="3,0,6,0"
									Background="#0f3c5a"
									BorderThickness="1"
									BorderBrush="{StaticResource MahApps.Brushes.AccentBase}">
								<Path Name="CheckMark"
									  Width="7"
									  Height="7"
									  Visibility="Collapsed"
									  SnapsToDevicePixels="False"
									  Stroke="{StaticResource MahApps.Brushes.AccentBase}"
									  StrokeThickness="2"
									  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
							</Border>
							<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
							<TextBlock Name="InputGestureText"
									   Grid.Column="2"
									   Text="{TemplateBinding InputGestureText}"
									   Margin="5,2,0,2"
									   DockPanel.Dock="Right" />
							<Path Name="ArrowPanel" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource MahApps.Brushes.Accent}" />									   
							<Popup
								Name="Popup"
								AllowsTransparency="True"
								Focusable="False"
								HorizontalOffset="2"
								IsOpen="{TemplateBinding IsSubmenuOpen}"
								Placement="Right"
								PopupAnimation="Fade">
								<Border
									Name="SubmenuBorder"
									Background="#FF252525"
									BorderBrush="{StaticResource MahApps.Brushes.Accent}"
									BorderThickness="1"
									SnapsToDevicePixels="False">
									<VirtualizingStackPanel IsVirtualizing="True" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
								</Border>
							</Popup>									   
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="Check" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="HeaderHost" Property="Margin" Value="0,0,0,0" />					
						</Trigger>		
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsCheckable" Value="true">
							<Setter TargetName="Check" Property="Visibility" Value="Visible" />
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource MahApps.Brushes.Accent}" />
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
							<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="2.5, 3, 2.5, 3" />
							<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
						</Trigger>	
						<Trigger Property="Role" Value="TopLevelHeader">
						  <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>	
						<Trigger Property="Role" Value="TopLevelItem">
						  <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>		
						<Trigger Property="Role" Value="SubmenuItem">
						  <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>						
					</ControlTemplate.Triggers>
				</ControlTemplate>	
		</Setter.Value>
	</Setter>			
	</Style>	
	<Style x:Key="DropDownMenuStyle" BasedOn="{StaticResource MahApps.Styles.ContextMenu}" TargetType="{x:Type ContextMenu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="HasDropShadow" Value="False"/>
		<Setter Property="Background" Value="#FF252525"/>
		<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border Background="#FF252525" CornerRadius="7, 7, 8, 8" BorderBrush="{StaticResource MahApps.Brushes.Accent}" BorderThickness="1" Opacity="1">
						<VirtualizingStackPanel IsVirtualizing="True" ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="False">
				<Setter Property="DataContext" Value="{x:Null}" />
			</Trigger>
        </Style.Triggers>		
	</Style>	 
	<Style x:Key="DropDownMenuitemStyle" BasedOn="{StaticResource MahApps.Styles.MenuItem}" TargetType="MenuItem">
		<Setter Property="OverridesDefaultStyle" Value="True"/> 
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="#FF252525"/>
		<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	</Style>
	<system:Double x:Key="MahApps.Sizes.ScrollBar.Width">8</system:Double>
	<system:Double x:Key="MahApps.Sizes.ScrollBar.Height">8</system:Double>
	<Style x:Key="LabelBorder" TargetType="{x:Type Label}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="Black"/>
	</Style>
	<LinearGradientBrush x:Key="NotificationsGradient" PresentationOptions:Freeze="True" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#EA000000" Offset="0"/>
		<GradientStop Color="#EA000000" Offset="0.3"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SeparatorGradient" PresentationOptions:Freeze="True" StartPoint="1,0" EndPoint="0,0">
		<GradientStop Color="Transparent" Offset="0.0"/>
		<GradientStop Color="Black" Offset="0.5"/>
		<GradientStop Offset="0.5" Color="black"/>
		<GradientStop Offset="1" Color="Transparent"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="VerticalSeparatorGradient" PresentationOptions:Freeze="True" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="Transparent" Offset="0.0"/>
		<GradientStop Color="Black" Offset="0.5"/>
		<GradientStop Offset="0.5" Color="black"/>
		<GradientStop Offset="1" Color="Transparent"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GridGradient" PresentationOptions:Freeze="True" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="Black" Offset="0.0"/>
		<GradientStop Offset="1" Color="Transparent"/>
	</LinearGradientBrush>
	<LinearGradientBrush
		x:Key="VideoViewGradient"
		StartPoint="0,0"
		EndPoint="0,0.5">
        <GradientStop Color="#78191A1A" Offset="1"/>
        <GradientStop Color="#00424242"/>
	</LinearGradientBrush>	
	<LinearGradientBrush
		x:Key="VideoViewGradientTop"
		EndPoint="0.5,1" 
		StartPoint="0.5,0">
		<GradientStop Color="#00424242" />
        <GradientStop Color="#78191A1A" Offset="1"/>
	</LinearGradientBrush>		
	<LinearGradientBrush
		x:Key="VideoViewFlyoutGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#B0000000" Offset="1"/>
        <GradientStop Color="#B0000000"/>
	</LinearGradientBrush>	
	<LinearGradientBrush
		x:Key="BookmarksGradient"
		StartPoint="0,0"
		EndPoint="0,0.5">
        <GradientStop Color="#B2191A1A" Offset="1"/>
        <GradientStop Color="#00424242"/>
	</LinearGradientBrush>	
	<DropShadowEffect x:Key="DropShadow" />
	<DropShadowEffect x:Key="TextDropShadow" ShadowDepth="1.3" Direction="275" BlurRadius="0" />
	<DropShadowEffect x:Key="TextDropShadowBlur" ShadowDepth="2" Direction="275" BlurRadius="1" />
	<Style x:Key="HyperlinkStyle" TargetType="TextBlock">
	  <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}"/>
	   <Setter Property="HorizontalAlignment" Value="Center"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="Blue"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="VideoViewDropDownButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>	
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border"
					        BorderThickness="0"
					        Padding="8,0,0,4"
							HorizontalAlignment="Right"
					        BorderBrush="Transparent"
					        CornerRadius="0"
					        PresentationOptions:Freeze="True"
					        Background="Transparent">
						<ContentPresenter Margin="0,0,0,0"/>
					</Border>
					<ControlTemplate.Triggers>				
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" >
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>
	<Style x:Key="DefaultDropDownButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="false"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">										 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>				
						<Trigger Property="IsMouseOver" Value="True">	
                           <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>						
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" >
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>	
	<Style x:Key="DropDownButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="#FF5D6162"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Name="Grid"
					        PresentationOptions:Freeze="True"
					        Background="{TemplateBinding Background}">
						  <Rectangle Fill="Black" Name="Rectangle">					  
						  </Rectangle>												 
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>				
						<Trigger Property="IsMouseOver" Value="True">	
                           <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Button.Border.MouseOver}"/>						
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" >
								<Setter.Value>
									<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Effect" Value="{x:Null}"/>							
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="DarkGray"/>
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>	
	<Style x:Key="DropDownStyle" TargetType="mah:DropDownButton">
		<Setter Property="Background" Value="Black"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect BlurRadius="4" ShadowDepth="3" Opacity="0.4" Direction="275" PresentationOptions:Freeze="True"/>
			</Setter.Value>
		</Setter>		
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="DarkGray"/>
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>		
			<Trigger Property="IsExpanded" Value="True">
				<Setter Property="RenderTransform" >
					<Setter.Value>
						<ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Effect" Value="{x:Null}"/>						
			</Trigger>		
		</Style.Triggers>
	</Style>
<DataTemplate x:Key="CustomHeaderTemplate" >
    <DockPanel Name="dpHeader"
               VerticalAlignment="Top"
               LastChildFill="True">
        <Button Name="PART_BackButton"
                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}, Path=Tag, Mode=OneWay}"
                Width="34"
                Height="34"
				Background="Transparent"
                Margin="2 2 2 2"
                VerticalAlignment="Top"
                Style="{StaticResource FilterButtonStyle}"
                DockPanel.Dock="Right">
               <iconPacks:PackIconMaterial Kind="ChevronRightCircleOutline" Foreground="#FF987D3C" Height="20" Width="20"/>
        </Button>
        <TextBlock Name="PART_BackHeaderText"
                   Margin="0 0 0 0"
				   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Text="{Binding}"
				   Foreground="#FFFFD265"
				   FontSize="20"
				   TextDecorations="None"
				   Effect="{StaticResource TextDropShadow}"
				   FontWeight="Bold" />
    </DockPanel>
</DataTemplate>
    <DataTemplate x:Key="dragPreviewTemplate">
        <Border BorderBrush="Gray" BorderThickness="1">
            <Grid Background="#FF252525">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition/>
					<RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>				
                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,5,0"
                VerticalAlignment="Center" Text="DropPosition:"/>
                <TextBlock Grid.Row="0" Grid.Column="1"
                Margin="5,0,5,2"
                VerticalAlignment="Center"
				Foreground="{StaticResource MahApps.Brushes.IdealForeground}"
                Text="{Binding DragCaption}" FontWeight="Bold"/>	
                <TextBlock Grid.Row="1" Grid.Column="0"
                Margin="5,0,5,2"
                VerticalAlignment="Center"
				Foreground="{StaticResource MahApps.Brushes.IdealForeground}"
                Text="Target:" />				
                <TextBlock Grid.Row="1" Grid.Column="1"
                Margin="5,0,5,2"
                VerticalAlignment="Center"
				Foreground="{StaticResource MahApps.Brushes.IdealForeground}"
                Text="{Binding Path=TargetNodeData.title}" FontWeight="Bold"/>	
                <TextBlock Grid.Row="2" Grid.Column="0"
                Margin="5,0,5,2"
                VerticalAlignment="Center"
				Foreground="{StaticResource MahApps.Brushes.IdealForeground}"
                Text="Type:" />				
                <TextBlock Grid.Row="2" Grid.Column="1"
                Margin="5,0,5,2"
                VerticalAlignment="Center"
				Foreground="{StaticResource MahApps.Brushes.IdealForeground}"
                Text="{Binding Path=TargetNodeData.Name}" FontWeight="Bold"/>				
            </Grid>
        </Border>            
    </DataTemplate> 
    <DataTemplate x:Key="busyIndicatorTemplate">
        <syncfusion:SfBusyIndicator x:Name="PART_BusyIndicator"
                                IsBusy="True"
                                AnimationType="DotCircle"
                                ViewboxWidth="{TemplateBinding Width}"
                                VerticalContentAlignment="Center"
                                VerticalAlignment="Center">
        </syncfusion:SfBusyIndicator>
    </DataTemplate>	
	<DataTemplate x:Key="PlaylistTreeTemplate">
		<Border Margin="0,2,5,0" BorderBrush="LightGreen" BorderThickness="{Binding Path=BorderThickness,FallbackValue=0}" ToolTip="{Binding Path=ToolTip}" HorizontalAlignment="Stretch">
			<VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" Orientation="Horizontal" ToolTip="{Binding Path=ToolTip}" HorizontalAlignment="Stretch">
				<Image
					   Width="20"
					   Height="20"
					   Stretch="Uniform"
					   Source="{Binding Path=Image}"
					   RenderOptions.BitmapScalingMode="NearestNeighbor"/>
				<TextBlock Text="{Binding Path=Number}" HorizontalAlignment="Center" FontSize="12"
						   Visibility="{Binding Path=NumberVisibility,FallbackValue=Visible}" Margin="5,2,0,0" Foreground="White"/>
  				<WpfExtensions:OutlinedTextBlock Text="{Binding Path=Display_Name}"
						   Stroke="Black"
						   TextOptions.TextFormattingMode="Display"
						   TextOptions.TextHintingMode="Fixed"
						   TextWrapping="Wrap"
						   VerticalAlignment="Center"
						   Fill="White"
						   FontWeight="Bold"
						   StrokeThickness="2"						   
						   Margin="4,2,0,0">
		            <WpfExtensions:OutlinedTextBlock.CacheMode>
                        <BitmapCache EnableClearType="False" 
                                     RenderAtScale="2" 
                                     SnapsToDevicePixels="True" />
                    </WpfExtensions:OutlinedTextBlock.CacheMode>					   
				</WpfExtensions:OutlinedTextBlock>				
<!--  				<TextBlock Text="{Binding Path=Display_Name}" FontWeight="{Binding Path=FontWeight, FallbackValue=Normal}"
						   ToolTip="{Binding Path=ToolTip}" VerticalAlignment="Center" Margin="5,0" TextWrapping="Wrap" Foreground="White"/> -->
<!--   				<TextBlock Text="{Binding Path=Status}"
						   FontStyle="{Binding Path=FontStyle, FallbackValue=Normal}"
						   Foreground="{Binding Path=FontColor, FallbackValue=White}"
						   FontWeight="Normal"
						   TextOptions.TextFormattingMode="Display"
						   FontSize="12"
						   Margin="4,2,0,0"
						   Effect="{StaticResource TextDropShadow}"/> -->
  				<WpfExtensions:OutlinedTextBlock Text="{Binding Path=Status}"
						   FontStyle="{Binding Path=FontStyle, FallbackValue=Normal}"
						   Stroke="Black"
						   TextOptions.TextFormattingMode="Display"
						   TextOptions.TextHintingMode="Fixed"
						   VerticalAlignment="Center"
						   Fill="{Binding Path=FontColor, FallbackValue=White}"
						   FontWeight="Bold"
						   StrokeThickness="2"
						   FontSize="12"
						   Margin="4,2,0,0">
		            <WpfExtensions:OutlinedTextBlock.CacheMode>
                        <BitmapCache EnableClearType="False" 
                                     RenderAtScale="2" 
                                     SnapsToDevicePixels="True" />
                    </WpfExtensions:OutlinedTextBlock.CacheMode>							   
						   </WpfExtensions:OutlinedTextBlock>			
<!--   				<TextBlock Text="{Binding Path=Status_Msg}"
						   FontStyle="{Binding Path=Status_FontStyle, FallbackValue=Normal}"
						   Foreground="{Binding Path=Status_FontColor, FallbackValue=White}"
						   FontWeight="Normal"
						   TextOptions.TextFormattingMode="Display"
						   FontSize="12"
						   Margin="4,2,0,0"
						   Effect="{StaticResource TextDropShadow}"/> 	 -->				   
  				<WpfExtensions:OutlinedTextBlock Text="{Binding Path=Status_Msg}"
						   FontStyle="{Binding Path=Status_FontStyle, FallbackValue=Normal}"
						   Stroke="Black"
						   TextOptions.TextFormattingMode="Display"
						   TextOptions.TextHintingMode="Fixed"
						   VerticalAlignment="Center"
						   Fill="{Binding Path=Status_FontColor, FallbackValue=White}"
						   FontWeight="Bold"
						   StrokeThickness="2"
						   FontSize="12"
						   Margin="4,2,0,0">
		            <WpfExtensions:OutlinedTextBlock.CacheMode>
                        <BitmapCache EnableClearType="False" 
                                     RenderAtScale="2" 
                                     SnapsToDevicePixels="True"  />
                    </WpfExtensions:OutlinedTextBlock.CacheMode>							   
						   </WpfExtensions:OutlinedTextBlock>					   
			</VirtualizingStackPanel>
		</Border>
	</DataTemplate>
<Style TargetType="syncfusion:TreeViewItem">
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type syncfusion:TreeViewItem}">
				<Grid Name="ROOT" Background="{TemplateBinding Background}">
					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="DropStates">
							<VisualState x:Name="Normal"/>
							<VisualState x:Name="DropAsChild">
								<Storyboard>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
									                               Duration="00:00:00"
									                               Storyboard.TargetName="BorderContent"
									                               Storyboard.TargetProperty="Background">
										<DiscreteObjectKeyFrame KeyTime="00:00:00">
											<DiscreteObjectKeyFrame.Value>
												<SolidColorBrush Color="#D2DFF2"/>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
									                               Duration="00:00:00"
									                               Storyboard.TargetName="BorderContent"
									                               Storyboard.TargetProperty="BorderBrush">
										<DiscreteObjectKeyFrame KeyTime="00:00:00">
											<DiscreteObjectKeyFrame.Value>
												<SolidColorBrush Color="#2B579A"/>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
									                               Duration="00:00:00"
									                               Storyboard.TargetName="BorderContent"
									                               Storyboard.TargetProperty="BorderThickness">
										<DiscreteObjectKeyFrame KeyTime="00:00:00">
											<DiscreteObjectKeyFrame.Value>
												<Thickness>1</Thickness>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
									                               Duration="00:00:00"
									                               Storyboard.TargetName="PART_ExpanderView"
									                               Storyboard.TargetProperty="Background">
										<DiscreteObjectKeyFrame KeyTime="00:00:00">
											<DiscreteObjectKeyFrame.Value>
												<SolidColorBrush Color="#D2DFF2"/>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MaxWidth="{TemplateBinding IndentationWidth}"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Border Name="BorderContent"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        BorderBrush="{TemplateBinding BorderBrush}"/>
 
					<Border Name="PART_HoverBorder"
					        Visibility="Collapsed"
					        Margin="1"
					        Background="{StaticResource ThemeAccentColor}"/>
 
					<StackPanel Name="PART_IndentContainer"
					            Panel.ZIndex="0"
					            Orientation="Horizontal"
					            Grid.Column="0">
						<Rectangle x:Name="PART_IndentLine"
						           StrokeDashArray="2,2"
						           HorizontalAlignment="Stretch"
						           Visibility="Hidden">
						</Rectangle>
					</StackPanel>
 
					<Grid Name="PART_LineGrid"
					      Grid.Column="1"
					      Panel.ZIndex="0"
					      Width="{TemplateBinding ExpanderWidth}"
					      Visibility="Hidden">
						<Rectangle x:Name="PART_HorizontalLine"
						           StrokeDashArray="2,2"
						           Margin="10,0,0,0"
						           Width="10"
						           VerticalAlignment="Center"/>
						<Rectangle x:Name="PART_VerticalLine"
						           StrokeDashArray="2,2"
						           HorizontalAlignment="Stretch"/>
					</Grid>
 
					<ContentControl Name="PART_ExpanderView"
					                Focusable="False"
					                Width="{TemplateBinding ExpanderWidth}"
					                Visibility="{Binding HasChildNodes, Converter={StaticResource bool2vis}}"
					                ContentTemplate="{TemplateBinding ExpanderTemplate}">
					</ContentControl>
 
					<syncfusion:TreeNodeView Name="PART_ContentView" Grid.Column="2"
					                         Margin="4,0,4,0"
					                         VerticalAlignment="Center"
					                         Focusable="False"
					                         ContentTemplate="{TemplateBinding ItemTemplate}">
					</syncfusion:TreeNodeView>
 
					<Border Name="PART_DragLine" Grid.ColumnSpan="3" Visibility="Collapsed" BorderBrush="#2B579A"/>
 
				</Grid>
 
				<ControlTemplate.Triggers>
					<Trigger Property="FullRowSelect" Value="True">
						<Setter Property="Grid.Column" TargetName="BorderContent" Value="0"/>
						<Setter Property="Grid.ColumnSpan" TargetName="BorderContent" Value="4"/>
						<Setter Property="Grid.Column" TargetName="PART_HoverBorder" Value="0"/>
						<Setter Property="Grid.ColumnSpan" TargetName="PART_HoverBorder" Value="4"/>
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="FullRowSelect" Value="False"/>
							<Condition Property="ExpanderPosition" Value="Start"/>
						</MultiTrigger.Conditions>
						<Setter Property="Grid.Column" TargetName="BorderContent" Value="2"/>
						<Setter Property="Grid.ColumnSpan" TargetName="BorderContent" Value="1"/>
						<Setter Property="Grid.Column" TargetName="PART_HoverBorder" Value="2"/>
						<Setter Property="Grid.ColumnSpan" TargetName="PART_HoverBorder" Value="1"/>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="FullRowSelect" Value="False"/>
							<Condition Property="ExpanderPosition" Value="End"/>
						</MultiTrigger.Conditions>
						<Setter Property="Grid.Column" TargetName="BorderContent" Value="0"/>
						<Setter Property="Grid.ColumnSpan" TargetName="BorderContent" Value="3"/>
						<Setter Property="Grid.Column" TargetName="PART_HoverBorder" Value="0"/>
						<Setter Property="Grid.ColumnSpan" TargetName="PART_HoverBorder" Value="3"/>
					</MultiTrigger>
					<Trigger Property="ExpanderPosition" Value="Start">
						<Setter Property="Grid.Column" TargetName="PART_ExpanderView" Value="1"/>
					</Trigger>
					<Trigger Property="ExpanderPosition" Value="End">
						<Setter Property="Grid.Column" TargetName="PART_ExpanderView" Value="3"/>
					</Trigger>
					<Trigger Property="ShowLines" Value="True">
						<Setter Property="Visibility" TargetName="PART_LineGrid" Value="Visible"/>
					</Trigger>
					<DataTrigger Binding="{Binding ShowExpanderAnimation}" Value="True">
						<Setter Property="ContentTemplate" TargetName="PART_ExpanderView" Value="{StaticResource busyIndicatorTemplate}"/>
					</DataTrigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Opacity" Value="0.3"/>
					</Trigger>
					<Trigger Property="Name" Value="Comments_TreeView">
						<Setter Property="Background" TargetName="PART_HoverBorder" Value="Transparent"/>
					</Trigger>					
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>	
</ResourceDictionary>